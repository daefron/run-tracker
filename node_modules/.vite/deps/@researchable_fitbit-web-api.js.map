{
  "version": 3,
  "sources": ["../../component-emitter/index.js", "../../superagent/lib/is-object.js", "../../superagent/lib/request-base.js", "../../superagent/lib/utils.js", "../../superagent/lib/response-base.js", "../../superagent/lib/should-retry.js", "../../superagent/lib/client.js", "browser-external:querystring", "browser-external:fs", "../../@researchable/fitbit-web-api/src/ApiClient.js", "../../@researchable/fitbit-web-api/src/api/ActivityApi.js", "../../@researchable/fitbit-web-api/src/api/ActivityIntradayTimeSeriesApi.js", "../../@researchable/fitbit-web-api/src/api/ActivityTimeSeriesApi.js", "../../@researchable/fitbit-web-api/src/api/AuthApi.js", "../../@researchable/fitbit-web-api/src/api/BodyAndWeightApi.js", "../../@researchable/fitbit-web-api/src/api/BodyAndWeightTimeSeriesApi.js", "../../@researchable/fitbit-web-api/src/api/DevicesApi.js", "../../@researchable/fitbit-web-api/src/api/FoodAndWaterApi.js", "../../@researchable/fitbit-web-api/src/api/FoodAndWaterTimeSeriesApi.js", "../../@researchable/fitbit-web-api/src/api/FriendsApi.js", "../../@researchable/fitbit-web-api/src/api/HeartRateIntradayTimeSeriesApi.js", "../../@researchable/fitbit-web-api/src/api/HeartRateTimeSeriesApi.js", "../../@researchable/fitbit-web-api/src/api/SleepApi.js", "../../@researchable/fitbit-web-api/src/api/SubscriptionsApi.js", "../../@researchable/fitbit-web-api/src/api/UserApi.js", "../../@researchable/fitbit-web-api/src/index.js"],
  "sourcesContent": ["\n/**\n * Expose `Emitter`.\n */\n\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n", "'use strict';\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n", "'use strict';\n\n/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  for(var option in options) {\n    switch(option) {\n      case 'deadline':\n        this._timeout = options.deadline;\n        break;\n      case 'response':\n        this._responseTimeout = options.response;\n        break;\n      default:\n        console.warn(\"Unknown timeout option\", option);\n    }\n  }\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function retry(count){\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  return this;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    console.error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(on){\n  // This is browser-only functionality. Node side is no-op.\n  if(on==undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n\n * @return {Request} for chaining\n */\nRequestBase.prototype.maxResponseSize = function(n){\n  if ('number' !== typeof n) {\n    throw TypeError(\"Invalid argument\");\n  }\n  this._maxResponseSize = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (this._formData) {\n    console.error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\nRequestBase.prototype._finalizeQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if ('function' === typeof this._sort) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n// For backwards compat only\nRequestBase.prototype._appendQueryString = function() {console.trace(\"Unsupported\");}\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout, errno){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n}\n", "'use strict';\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, shouldStripCookie){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  if (shouldStripCookie) {\n    delete header['cookie'];\n  }\n  return header;\n};\n", "'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field){\n    return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n};\n", "'use strict';\n\nvar ERROR_CODES = [\n  'ECONNRESET',\n  'ETIMEDOUT',\n  'EADDRINFO',\n  'ESOCKETTIMEDOUT'\n];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err\n * @param {Response} [res]\n * @returns {Boolean}\n */\nmodule.exports = function shouldRetry(err, res) {\n  if (err && err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n  if (res && res.status && res.status >= 500) return true;\n  // Superagent timeout\n  if (err && 'timeout' in err && err.code == 'ECONNABORTED') return true;\n  if (err && 'crossDomain' in err) return true;\n  return false;\n};\n", "/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('component-emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar ResponseBase = require('./response-base');\nvar shouldRetry = require('./should-retry');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only version of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) { // could be empty line, just skip it\n      continue;\n    }\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n      status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if(this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n      }\n    } catch(custom_err) {\n      new_err = custom_err; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (typeof pass === 'object' && pass !== null) { // pass is optional and can substitute for options\n    options = pass;\n  }\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + btoa(user + ':' + pass));\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n\n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', 'Bearer ' + user);\n    break;\n  }\n  return this;\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  // console.log(this._retries, this._maxRetries)\n  if (this._maxRetries && this._retries++ < this._maxRetries && shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function() {\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n\n    if (this.header.hasOwnProperty(field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn){\n  var req = request('DELETE', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"querystring\" has been externalized for browser compatibility. Cannot access \"querystring.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['superagent', 'querystring'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('superagent'), require('querystring'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.ApiClient = factory(root.superagent, root.querystring);\n  }\n}(this, function(superagent, querystring) {\n  'use strict';\n\n  /**\n   * @module ApiClient\n   * @version 1\n   */\n\n  /**\n   * Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an\n   * application to use this class directly - the *Api and model classes provide the public API for the service. The\n   * contents of this file should be regarded as internal but are documented for completeness.\n   * @alias module:ApiClient\n   * @class\n   */\n  var exports = function() {\n    /**\n     * The base URL against which to resolve every API call's (relative) path.\n     * @type {String}\n     * @default https://api.fitbit.com\n     */\n    this.basePath = 'https://api.fitbit.com'.replace(/\\/+$/, '');\n\n    /**\n     * The authentication methods to be included for all API calls.\n     * @type {Array.<String>}\n     */\n    this.authentications = {\n      'oauth2': {type: 'oauth2'}\n    };\n    /**\n     * The default HTTP headers to be included for all API calls.\n     * @type {Array.<String>}\n     * @default {}\n     */\n    this.defaultHeaders = {};\n\n    /**\n     * The default HTTP timeout for all API calls.\n     * @type {Number}\n     * @default 60000\n     */\n    this.timeout = 60000;\n\n    /**\n     * If set to false an additional timestamp parameter is added to all API GET calls to\n     * prevent browser caching\n     * @type {Boolean}\n     * @default true\n     */\n    this.cache = true;\n\n    /**\n     * If set to true, the client will save the cookies from each server\n     * response, and return them in the next request.\n     * @default false\n     */\n    this.enableCookies = false;\n\n    /*\n     * Used to save and return cookies in a node.js (non-browser) setting,\n     * if this.enableCookies is set to true.\n     */\n    if (typeof window === 'undefined') {\n      this.agent = new superagent.agent();\n    }\n\n    /*\n     * Allow user to override superagent agent\n     */\n    this.requestAgent = null;\n  };\n\n  /**\n   * Returns a string representation for an actual parameter.\n   * @param param The actual parameter.\n   * @returns {String} The string representation of <code>param</code>.\n   */\n  exports.prototype.paramToString = function(param) {\n    if (param == undefined || param == null) {\n      return '';\n    }\n    if (param instanceof Date) {\n      return param.toJSON();\n    }\n    return param.toString();\n  };\n\n  /**\n   * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\n   * NOTE: query parameters are not handled here.\n   * @param {String} path The path to append to the base URL.\n   * @param {Object} pathParams The parameter values to append.\n   * @returns {String} The encoded path with parameter values substituted.\n   */\n  exports.prototype.buildUrl = function(path, pathParams) {\n    if (!path.match(/^\\//)) {\n      path = '/' + path;\n    }\n    var url = this.basePath + path;\n    var _this = this;\n    url = url.replace(/\\{([\\w-]+)\\}/g, function(fullMatch, key) {\n      var value;\n      if (pathParams.hasOwnProperty(key)) {\n        value = _this.paramToString(pathParams[key]);\n      } else {\n        value = fullMatch;\n      }\n      return encodeURIComponent(value);\n    });\n    return url;\n  };\n\n  /**\n   * Checks whether the given content type represents JSON.<br>\n   * JSON content type examples:<br>\n   * <ul>\n   * <li>application/json</li>\n   * <li>application/json; charset=UTF8</li>\n   * <li>APPLICATION/JSON</li>\n   * </ul>\n   * @param {String} contentType The MIME content type to check.\n   * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.\n   */\n  exports.prototype.isJsonMime = function(contentType) {\n    return Boolean(contentType != null && contentType.match(/^application\\/json(;.*)?$/i));\n  };\n\n  /**\n   * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.\n   * @param {Array.<String>} contentTypes\n   * @returns {String} The chosen content type, preferring JSON.\n   */\n  exports.prototype.jsonPreferredMime = function(contentTypes) {\n    for (var i = 0; i < contentTypes.length; i++) {\n      if (this.isJsonMime(contentTypes[i])) {\n        return contentTypes[i];\n      }\n    }\n    return contentTypes[0];\n  };\n\n  /**\n   * Checks whether the given parameter value represents file-like content.\n   * @param param The parameter to check.\n   * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n   */\n  exports.prototype.isFileParam = function(param) {\n    // fs.ReadStream in Node.js and Electron (but not in runtime like browserify)\n    if (typeof require === 'function') {\n      var fs;\n      try {\n        fs = require('fs');\n      } catch (err) {}\n      if (fs && fs.ReadStream && param instanceof fs.ReadStream) {\n        return true;\n      }\n    }\n    // Buffer in Node.js\n    if (typeof Buffer === 'function' && param instanceof Buffer) {\n      return true;\n    }\n    // Blob in browser\n    if (typeof Blob === 'function' && param instanceof Blob) {\n      return true;\n    }\n    // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n    if (typeof File === 'function' && param instanceof File) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Normalizes parameter values:\n   * <ul>\n   * <li>remove nils</li>\n   * <li>keep files and arrays</li>\n   * <li>format to string with `paramToString` for other cases</li>\n   * </ul>\n   * @param {Object.<String, Object>} params The parameters as object properties.\n   * @returns {Object.<String, Object>} normalized parameters.\n   */\n  exports.prototype.normalizeParams = function(params) {\n    var newParams = {};\n    for (var key in params) {\n      if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {\n        var value = params[key];\n        if (this.isFileParam(value) || Array.isArray(value)) {\n          newParams[key] = value;\n        } else {\n          newParams[key] = this.paramToString(value);\n        }\n      }\n    }\n    return newParams;\n  };\n\n  /**\n   * Enumeration of collection format separator strategies.\n   * @enum {String}\n   * @readonly\n   */\n  exports.CollectionFormatEnum = {\n    /**\n     * Comma-separated values. Value: <code>csv</code>\n     * @const\n     */\n    CSV: ',',\n    /**\n     * Space-separated values. Value: <code>ssv</code>\n     * @const\n     */\n    SSV: ' ',\n    /**\n     * Tab-separated values. Value: <code>tsv</code>\n     * @const\n     */\n    TSV: '\\t',\n    /**\n     * Pipe(|)-separated values. Value: <code>pipes</code>\n     * @const\n     */\n    PIPES: '|',\n    /**\n     * Native array. Value: <code>multi</code>\n     * @const\n     */\n    MULTI: 'multi'\n  };\n\n  /**\n   * Builds a string representation of an array-type actual parameter, according to the given collection format.\n   * @param {Array} param An array parameter.\n   * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.\n   * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns\n   * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.\n   */\n  exports.prototype.buildCollectionParam = function buildCollectionParam(param, collectionFormat) {\n    if (param == null) {\n      return null;\n    }\n    switch (collectionFormat) {\n      case 'csv':\n        return param.map(this.paramToString).join(',');\n      case 'ssv':\n        return param.map(this.paramToString).join(' ');\n      case 'tsv':\n        return param.map(this.paramToString).join('\\t');\n      case 'pipes':\n        return param.map(this.paramToString).join('|');\n      case 'multi':\n        // return the array directly as SuperAgent will handle it as expected\n        return param.map(this.paramToString);\n      default:\n        throw new Error('Unknown collection format: ' + collectionFormat);\n    }\n  };\n\n  /**\n   * Applies authentication headers to the request.\n   * @param {Object} request The request object created by a <code>superagent()</code> call.\n   * @param {Array.<String>} authNames An array of authentication method names.\n   */\n  exports.prototype.applyAuthToRequest = function(request, authNames) {\n    var _this = this;\n    authNames.forEach(function(authName) {\n      var auth = _this.authentications[authName];\n      switch (auth.type) {\n        case 'basic':\n          if (auth.username || auth.password) {\n            request.auth(auth.username || '', auth.password || '');\n          }\n          break;\n        case 'apiKey':\n          if (auth.apiKey) {\n            var data = {};\n            if (auth.apiKeyPrefix) {\n              data[auth.name] = auth.apiKeyPrefix + ' ' + auth.apiKey;\n            } else {\n              data[auth.name] = auth.apiKey;\n            }\n            if (auth['in'] === 'header') {\n              request.set(data);\n            } else {\n              request.query(data);\n            }\n          }\n          break;\n        case 'oauth2':\n          if (auth.accessToken) {\n            request.set({'Authorization': 'Bearer ' + auth.accessToken});\n          }\n          break;\n        default:\n          throw new Error('Unknown authentication type: ' + auth.type);\n      }\n    });\n  };\n\n  /**\n   * Deserializes an HTTP response body into a value of the specified type.\n   * @param {Object} response A SuperAgent response object.\n   * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\n   * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n   * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n   * all properties on <code>data<code> will be converted to this type.\n   * @returns A value of the specified type.\n   */\n  exports.prototype.deserialize = function deserialize(response, returnType) {\n    if (response == null || returnType == null || response.status == 204) {\n      return null;\n    }\n    // Rely on SuperAgent for parsing response body.\n    // See http://visionmedia.github.io/superagent/#parsing-response-bodies\n    var data = response.body;\n    if (data == null || (typeof data === 'object' && typeof data.length === 'undefined' && !Object.keys(data).length)) {\n      // SuperAgent does not always produce a body; use the unparsed response as a fallback\n      data = response.text;\n    }\n    return exports.convertToType(data, returnType);\n  };\n\n  /**\n   * Callback function to receive the result of the operation.\n   * @callback module:ApiClient~callApiCallback\n   * @param {String} error Error message, if any.\n   * @param data The data returned by the service call.\n   * @param {String} response The complete HTTP response.\n   */\n\n  /**\n   * Invokes the REST service using the supplied settings and parameters.\n   * @param {String} path The base URL to invoke.\n   * @param {String} httpMethod The HTTP method to use.\n   * @param {Object.<String, String>} pathParams A map of path parameters and their values.\n   * @param {Object.<String, Object>} queryParams A map of query parameters and their values.\n   * @param {Object.<String, Object>} collectionQueryParams A map of collection query parameters and their values.\n   * @param {Object.<String, Object>} headerParams A map of header parameters and their values.\n   * @param {Object.<String, Object>} formParams A map of form parameters and their values.\n   * @param {Object} bodyParam The value to pass as the request body.\n   * @param {Array.<String>} authNames An array of authentication type names.\n   * @param {Array.<String>} contentTypes An array of request MIME types.\n   * @param {Array.<String>} accepts An array of acceptable response MIME types.\n   * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the\n   * constructor for a complex type.\n   * @param {module:ApiClient~callApiCallback} callback The callback function.\n   * @returns {Object} The SuperAgent request object.\n   */\n  exports.prototype.callApi = function callApi(path, httpMethod, pathParams,\n      queryParams, collectionQueryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts,\n      returnType, callback) {\n\n    var _this = this;\n    var url = this.buildUrl(path, pathParams);\n    var request = superagent(httpMethod, url);\n\n    // apply authentications\n    this.applyAuthToRequest(request, authNames);\n\n    // set collection query parameters\n    for (var key in collectionQueryParams) {\n      if (collectionQueryParams.hasOwnProperty(key)) {\n        var param = collectionQueryParams[key];\n        if (param.collectionFormat === 'csv') {\n          // SuperAgent normally percent-encodes all reserved characters in a query parameter. However,\n          // commas are used as delimiters for the 'csv' collectionFormat so they must not be encoded. We\n          // must therefore construct and encode 'csv' collection query parameters manually.\n          if (param.value != null) {\n            var value = param.value.map(this.paramToString).map(encodeURIComponent).join(',');\n            request.query(encodeURIComponent(key) + \"=\" + value);\n          }\n        } else {\n          // All other collection query parameters should be treated as ordinary query parameters.\n          queryParams[key] = this.buildCollectionParam(param.value, param.collectionFormat);\n        }\n      }\n    }\n\n    // set query parameters\n    if (httpMethod.toUpperCase() === 'GET' && this.cache === false) {\n        queryParams['_'] = new Date().getTime();\n    }\n    request.query(this.normalizeParams(queryParams));\n\n    // set header parameters\n    request.set(this.defaultHeaders).set(this.normalizeParams(headerParams));\n\n\n    // set requestAgent if it is set by user\n    if (this.requestAgent) {\n      request.agent(this.requestAgent);\n    }\n\n    // set request timeout\n    request.timeout(this.timeout);\n\n    var contentType = this.jsonPreferredMime(contentTypes);\n    if (contentType) {\n      // Issue with superagent and multipart/form-data (https://github.com/visionmedia/superagent/issues/746)\n      if(contentType != 'multipart/form-data') {\n        request.type(contentType);\n      }\n    } else if (!request.header['Content-Type']) {\n      request.type('application/json');\n    }\n\n    if (contentType === 'application/x-www-form-urlencoded') {\n      request.send(querystring.stringify(this.normalizeParams(formParams)));\n    } else if (contentType == 'multipart/form-data') {\n      var _formParams = this.normalizeParams(formParams);\n      for (var key in _formParams) {\n        if (_formParams.hasOwnProperty(key)) {\n          if (this.isFileParam(_formParams[key])) {\n            // file field\n            request.attach(key, _formParams[key]);\n          } else {\n            request.field(key, _formParams[key]);\n          }\n        }\n      }\n    } else if (bodyParam) {\n      request.send(bodyParam);\n    }\n\n    var accept = this.jsonPreferredMime(accepts);\n    if (accept) {\n      request.accept(accept);\n    }\n\n    if (returnType === 'Blob') {\n      request.responseType('blob');\n    } else if (returnType === 'String') {\n      request.responseType('string');\n    }\n\n    // Attach previously saved cookies, if enabled\n    if (this.enableCookies){\n      if (typeof window === 'undefined') {\n        this.agent.attachCookies(request);\n      }\n      else {\n        request.withCredentials();\n      }\n    }\n\n\n    request.end(function(error, response) {\n      if (callback) {\n        var data = null;\n        if (!error) {\n          try {\n            data = _this.deserialize(response, returnType);\n            if (_this.enableCookies && typeof window === 'undefined'){\n              _this.agent.saveCookies(response);\n            }\n          } catch (err) {\n            error = err;\n          }\n        }\n        callback(error, data, response);\n      }\n    });\n\n    return request;\n  };\n\n  /**\n   * Parses an ISO-8601 string representation of a date value.\n   * @param {String} str The date value as a string.\n   * @returns {Date} The parsed date object.\n   */\n  exports.parseDate = function(str) {\n    return new Date(str.replace(/T/i, ' '));\n  };\n\n  /**\n   * Converts a value to the specified type.\n   * @param {(String|Object)} data The data to convert, as a string or object.\n   * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\n   * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n   * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n   * all properties on <code>data<code> will be converted to this type.\n   * @returns An instance of the specified type or null or undefined if data is null or undefined.\n   */\n  exports.convertToType = function(data, type) {\n    if (data === null || data === undefined)\n      return data\n\n    switch (type) {\n      case 'Boolean':\n        return Boolean(data);\n      case 'Integer':\n        return parseInt(data, 10);\n      case 'Number':\n        return parseFloat(data);\n      case 'String':\n        return String(data);\n      case 'Date':\n        return this.parseDate(String(data));\n      case 'Blob':\n      \treturn data;\n      default:\n        if (type === Object) {\n          // generic object, return directly\n          return data;\n        } else if (typeof type === 'function') {\n          // for model type like: User\n          return type.constructFromObject(data);\n        } else if (Array.isArray(type)) {\n          // for array type like: ['String']\n          var itemType = type[0];\n          return data.map(function(item) {\n            return exports.convertToType(item, itemType);\n          });\n        } else if (typeof type === 'object') {\n          // for plain object type like: {'String': 'Integer'}\n          var keyType, valueType;\n          for (var k in type) {\n            if (type.hasOwnProperty(k)) {\n              keyType = k;\n              valueType = type[k];\n              break;\n            }\n          }\n          var result = {};\n          for (var k in data) {\n            if (data.hasOwnProperty(k)) {\n              var key = exports.convertToType(k, keyType);\n              var value = exports.convertToType(data[k], valueType);\n              result[key] = value;\n            }\n          }\n          return result;\n        } else {\n          // for unknown type, return the data directly\n          return data;\n        }\n    }\n  };\n\n  /**\n   * Constructs a new map or array model from REST data.\n   * @param data {Object|Array} The REST data.\n   * @param obj {Object|Array} The target object or array.\n   */\n  exports.constructFromObject = function(data, obj, itemType) {\n    if (Array.isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        if (data.hasOwnProperty(i))\n          obj[i] = exports.convertToType(data[i], itemType);\n      }\n    } else {\n      for (var k in data) {\n        if (data.hasOwnProperty(k))\n          obj[k] = exports.convertToType(data[k], itemType);\n      }\n    }\n  };\n\n  /**\n   * The default API client implementation.\n   * @type {module:ApiClient}\n   */\n  exports.instance = new exports();\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.ActivityApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * Activity service.\n   * @module api/ActivityApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new ActivityApi. \n   * @alias module:api/ActivityApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the addActivitiesLog operation.\n     * @callback module:api/ActivityApi~addActivitiesLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Log Activity\n     * The Log Activity endpoint creates log entry for an activity or user&#39;s private custom activity using units in the unit system which corresponds to the Accept-Language header provided (or using optional custom distanceUnit) and get a response in the format requested.\n     * @param {Number} activityId The ID of the activity, directory activity or intensity level activity.\n     * @param {Number} manualCalories Calories burned that are manaully specified. Required with activityName must be provided.\n     * @param {String} startTime Activity start time. Hours and minutes in the format HH:mm:ss.\n     * @param {Number} durationMillis Duration in milliseconds.\n     * @param {Date} _date Log entry date in the format yyyy-MM-dd.\n     * @param {Number} distance Distance is required for logging directory activity in the format X.XX and in the selected distanceUnit.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.activityName Custom activity name. Either activityId or activityName must be provided.\n     * @param {Number} opts.distanceUnit Distance measurement unit. Steps units are available only for Walking (activityId&#x3D;90013) and Running (activityId&#x3D;90009) directory activities and their intensity levels.\n     * @param {module:api/ActivityApi~addActivitiesLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addActivitiesLog = function(activityId, manualCalories, startTime, durationMillis, _date, distance, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'activityId' is set\n      if (activityId === undefined || activityId === null) {\n        throw new Error(\"Missing the required parameter 'activityId' when calling addActivitiesLog\");\n      }\n\n      // verify the required parameter 'manualCalories' is set\n      if (manualCalories === undefined || manualCalories === null) {\n        throw new Error(\"Missing the required parameter 'manualCalories' when calling addActivitiesLog\");\n      }\n\n      // verify the required parameter 'startTime' is set\n      if (startTime === undefined || startTime === null) {\n        throw new Error(\"Missing the required parameter 'startTime' when calling addActivitiesLog\");\n      }\n\n      // verify the required parameter 'durationMillis' is set\n      if (durationMillis === undefined || durationMillis === null) {\n        throw new Error(\"Missing the required parameter 'durationMillis' when calling addActivitiesLog\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling addActivitiesLog\");\n      }\n\n      // verify the required parameter 'distance' is set\n      if (distance === undefined || distance === null) {\n        throw new Error(\"Missing the required parameter 'distance' when calling addActivitiesLog\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'activityId': activityId,\n        'activityName': opts['activityName'],\n        'manualCalories': manualCalories,\n        'startTime': startTime,\n        'durationMillis': durationMillis,\n        'date': _date,\n        'distance': distance,\n        'distanceUnit': opts['distanceUnit'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the addFavoriteActivities operation.\n     * @callback module:api/ActivityApi~addFavoriteActivitiesCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Add Favorite Activity\n     * Adds the activity with the given ID to user&#39;s list of favorite activities.\n     * @param {String} activityId The encoded ID of the activity.\n     * @param {module:api/ActivityApi~addFavoriteActivitiesCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addFavoriteActivities = function(activityId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'activityId' is set\n      if (activityId === undefined || activityId === null) {\n        throw new Error(\"Missing the required parameter 'activityId' when calling addFavoriteActivities\");\n      }\n\n\n      var pathParams = {\n        'activity-id': activityId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/favorite/{activity-id}.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the addUpdateActivitiesGoals operation.\n     * @callback module:api/ActivityApi~addUpdateActivitiesGoalsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Update Activity Goals\n     * Updates a user&#39;s daily or weekly activity goals and returns a response using units in the unit system which corresponds to the Accept-Language header provided.\n     * @param {String} period daily or weekly.\n     * @param {String} type goal type\n     * @param {String} value goal value\n     * @param {module:api/ActivityApi~addUpdateActivitiesGoalsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addUpdateActivitiesGoals = function(period, type, value, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'period' is set\n      if (period === undefined || period === null) {\n        throw new Error(\"Missing the required parameter 'period' when calling addUpdateActivitiesGoals\");\n      }\n\n      // verify the required parameter 'type' is set\n      if (type === undefined || type === null) {\n        throw new Error(\"Missing the required parameter 'type' when calling addUpdateActivitiesGoals\");\n      }\n\n      // verify the required parameter 'value' is set\n      if (value === undefined || value === null) {\n        throw new Error(\"Missing the required parameter 'value' when calling addUpdateActivitiesGoals\");\n      }\n\n\n      var pathParams = {\n        'period': period\n      };\n      var queryParams = {\n        'type': type,\n        'value': value,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/goals/{period}.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteActivitiesLog operation.\n     * @callback module:api/ActivityApi~deleteActivitiesLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Activity Log\n     * Deletes a user&#39;s activity log entry with the given ID.\n     * @param {Number} activityLogId The id of the activity log entry.\n     * @param {module:api/ActivityApi~deleteActivitiesLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteActivitiesLog = function(activityLogId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'activityLogId' is set\n      if (activityLogId === undefined || activityLogId === null) {\n        throw new Error(\"Missing the required parameter 'activityLogId' when calling deleteActivitiesLog\");\n      }\n\n\n      var pathParams = {\n        'activity-log-id': activityLogId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/{activity-log-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteFavoriteActivities operation.\n     * @callback module:api/ActivityApi~deleteFavoriteActivitiesCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Favorite Activity\n     * Removes the activity with the given ID from a user&#39;s list of favorite activities.\n     * @param {String} activityId The ID of the activity to be removed.\n     * @param {module:api/ActivityApi~deleteFavoriteActivitiesCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteFavoriteActivities = function(activityId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'activityId' is set\n      if (activityId === undefined || activityId === null) {\n        throw new Error(\"Missing the required parameter 'activityId' when calling deleteFavoriteActivities\");\n      }\n\n\n      var pathParams = {\n        'activity-id': activityId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/favorite/{activity-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesByDate operation.\n     * @callback module:api/ActivityApi~getActivitiesByDateCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Activity Summary by Date \n     * Retrieves a summary and list of a user&#39;s activities and activity log entries for a given day.\n     * @param {Date} _date The date in the format yyyy-MM-dd\n     * @param {module:api/ActivityApi~getActivitiesByDateCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesByDate = function(_date, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getActivitiesByDate\");\n      }\n\n\n      var pathParams = {\n        'date': _date\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/date/{date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesGoals operation.\n     * @callback module:api/ActivityApi~getActivitiesGoalsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Activity Goals\n     * Retreives a user&#39;s current daily or weekly activity goals using measurement units as defined in the unit system, which corresponds to the Accept-Language header provided.\n     * @param {String} period daily or weekly.\n     * @param {module:api/ActivityApi~getActivitiesGoalsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesGoals = function(period, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'period' is set\n      if (period === undefined || period === null) {\n        throw new Error(\"Missing the required parameter 'period' when calling getActivitiesGoals\");\n      }\n\n\n      var pathParams = {\n        'period': period\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/goals/{period}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesLog operation.\n     * @callback module:api/ActivityApi~getActivitiesLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Lifetime Stats\n     * Updates a user&#39;s daily activity goals and returns a response using units in the unit system which corresponds to the Accept-Language header provided.\n     * @param {module:api/ActivityApi~getActivitiesLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesLog = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesLogList operation.\n     * @callback module:api/ActivityApi~getActivitiesLogListCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Activity Log List\n     * Retreives a list of user&#39;s activity log entries before or after a given day with offset and limit using units in the unit system which corresponds to the Accept-Language header provided.\n     * @param {String} sort The sort order of entries by date asc (ascending) or desc (descending).\n     * @param {Number} offset The offset number of entries.\n     * @param {Number} limit The maximum number of entries returned (maximum;100).\n     * @param {Object} opts Optional parameters\n     * @param {Date} opts.beforeDate The date in the format yyyy-MM-ddTHH:mm:ss. Only yyyy-MM-dd is required. Either beforeDate or afterDate should be specified.\n     * @param {Date} opts.afterDate The date in the format yyyy-MM-ddTHH:mm:ss.\n     * @param {module:api/ActivityApi~getActivitiesLogListCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesLogList = function(sort, offset, limit, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'sort' is set\n      if (sort === undefined || sort === null) {\n        throw new Error(\"Missing the required parameter 'sort' when calling getActivitiesLogList\");\n      }\n\n      // verify the required parameter 'offset' is set\n      if (offset === undefined || offset === null) {\n        throw new Error(\"Missing the required parameter 'offset' when calling getActivitiesLogList\");\n      }\n\n      // verify the required parameter 'limit' is set\n      if (limit === undefined || limit === null) {\n        throw new Error(\"Missing the required parameter 'limit' when calling getActivitiesLogList\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'beforeDate': opts['beforeDate'],\n        'afterDate': opts['afterDate'],\n        'sort': sort,\n        'offset': offset,\n        'limit': limit,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/list.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesTCX operation.\n     * @callback module:api/ActivityApi~getActivitiesTCXCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Activity TCX\n     * Retreives the details of a user&#39;s location and heart rate data during a logged exercise activity.\n     * @param {String} logId The activity&#39;s log ID.\n     * @param {Object} opts Optional parameters\n     * @param {Boolean} opts.includePartialTCX Include TCX points regardless of GPS data being present\n     * @param {module:api/ActivityApi~getActivitiesTCXCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesTCX = function(logId, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'logId' is set\n      if (logId === undefined || logId === null) {\n        throw new Error(\"Missing the required parameter 'logId' when calling getActivitiesTCX\");\n      }\n\n\n      var pathParams = {\n        'log-id': logId\n      };\n      var queryParams = {\n        'includePartialTCX': opts['includePartialTCX'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/{log-id}.tcx', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesTypeDetail operation.\n     * @callback module:api/ActivityApi~getActivitiesTypeDetailCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Activity Type\n     * Returns the detail of a specific activity in the Fitbit activities database in the format requested. If activity has levels, it also returns a list of activity level details.\n     * @param {String} activityId The activity ID.\n     * @param {module:api/ActivityApi~getActivitiesTypeDetailCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesTypeDetail = function(activityId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'activityId' is set\n      if (activityId === undefined || activityId === null) {\n        throw new Error(\"Missing the required parameter 'activityId' when calling getActivitiesTypeDetail\");\n      }\n\n\n      var pathParams = {\n        'activity-id': activityId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/activities/{activity-id}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesTypes operation.\n     * @callback module:api/ActivityApi~getActivitiesTypesCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Browse Activity Types\n     * Retreives a tree of all valid Fitbit public activities from the activities catelog as well as private custom activities the user created in the format requested.\n     * @param {module:api/ActivityApi~getActivitiesTypesCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesTypes = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/activities.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFavoriteActivities operation.\n     * @callback module:api/ActivityApi~getFavoriteActivitiesCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Favorite Activities\n     * Returns a list of a user&#39;s favorite activities.\n     * @param {module:api/ActivityApi~getFavoriteActivitiesCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFavoriteActivities = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/favorite.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFrequentActivities operation.\n     * @callback module:api/ActivityApi~getFrequentActivitiesCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Frequent Activities\n     * Retreives a list of a user&#39;s frequent activities in the format requested using units in the unit system which corresponds to the Accept-Language header provided.\n     * @param {module:api/ActivityApi~getFrequentActivitiesCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFrequentActivities = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/frequent.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getRecentActivities operation.\n     * @callback module:api/ActivityApi~getRecentActivitiesCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Recent Activity Types\n     * Retreives a list of a user&#39;s recent activities types logged with some details of the last activity log of that type using units in the unit system which corresponds to the Accept-Language header provided.\n     * @param {module:api/ActivityApi~getRecentActivitiesCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getRecentActivities = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/recent.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.ActivityIntradayTimeSeriesApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * ActivityIntradayTimeSeries service.\n   * @module api/ActivityIntradayTimeSeriesApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new ActivityIntradayTimeSeriesApi. \n   * @alias module:api/ActivityIntradayTimeSeriesApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getActivitiesResourceByDateIntraday operation.\n     * @callback module:api/ActivityIntradayTimeSeriesApi~getActivitiesResourceByDateIntradayCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Intraday Time Series\n     * Returns the Intraday Time Series for a given resource in the format requested.\n     * @param {module:model/String} resourcePath The resource-path; see options in the Resource Path Options section in the full documentation.\n     * @param {Date} _date The date in the format yyyy-MM-dd or today.\n     * @param {String} detailLevel Number of data points to include. Either 1min or 15min. Optional.\n     * @param {module:api/ActivityIntradayTimeSeriesApi~getActivitiesResourceByDateIntradayCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesResourceByDateIntraday = function(resourcePath, _date, detailLevel, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getActivitiesResourceByDateIntraday\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getActivitiesResourceByDateIntraday\");\n      }\n\n      // verify the required parameter 'detailLevel' is set\n      if (detailLevel === undefined || detailLevel === null) {\n        throw new Error(\"Missing the required parameter 'detailLevel' when calling getActivitiesResourceByDateIntraday\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'date': _date,\n        'detail-level': detailLevel\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/{resource-path}/date/{date}/1d/{detail-level}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesResourceByDateRangeIntraday operation.\n     * @callback module:api/ActivityIntradayTimeSeriesApi~getActivitiesResourceByDateRangeIntradayCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Activity Intraday Time Series\n     * Returns the Activity Intraday Time Series for a given resource in the format requested.\n     * @param {module:model/String} resourcePath The resource-path; see options in the Resource Path Options section in the full documentation.\n     * @param {Date} baseDate The date in the format yyyy-MM-dd or today.\n     * @param {Date} endDate The date in the format yyyy-MM-dd or today.\n     * @param {String} detailLevel Number of data points to include. Either 1min or 15min. Optional.\n     * @param {module:api/ActivityIntradayTimeSeriesApi~getActivitiesResourceByDateRangeIntradayCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesResourceByDateRangeIntraday = function(resourcePath, baseDate, endDate, detailLevel, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getActivitiesResourceByDateRangeIntraday\");\n      }\n\n      // verify the required parameter 'baseDate' is set\n      if (baseDate === undefined || baseDate === null) {\n        throw new Error(\"Missing the required parameter 'baseDate' when calling getActivitiesResourceByDateRangeIntraday\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getActivitiesResourceByDateRangeIntraday\");\n      }\n\n      // verify the required parameter 'detailLevel' is set\n      if (detailLevel === undefined || detailLevel === null) {\n        throw new Error(\"Missing the required parameter 'detailLevel' when calling getActivitiesResourceByDateRangeIntraday\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'base-date': baseDate,\n        'end-date': endDate,\n        'detail-level': detailLevel\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/{resource-path}/date/{base-date}/{end-date}/{detail-level}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesResourceByDateRangeTimeSeriesIntraday operation.\n     * @callback module:api/ActivityIntradayTimeSeriesApi~getActivitiesResourceByDateRangeTimeSeriesIntradayCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Activity Intraday Time Series\n     * Returns the Intraday Time Series for a given resource in the format requested.\n     * @param {module:model/String} resourcePath The resource-path; see options in the Resource Path Options section in the full documentation.\n     * @param {Date} _date The date in the format yyyy-MM-dd or today.\n     * @param {Date} endDate The date in the format yyyy-MM-dd or today.\n     * @param {String} detailLevel Number of data points to include. Either 1min or 15min.\n     * @param {String} startTime The start of the period in the format HH:mm.\n     * @param {String} endTime The end of the period in the format HH:mm.\n     * @param {module:api/ActivityIntradayTimeSeriesApi~getActivitiesResourceByDateRangeTimeSeriesIntradayCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesResourceByDateRangeTimeSeriesIntraday = function(resourcePath, _date, endDate, detailLevel, startTime, endTime, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getActivitiesResourceByDateRangeTimeSeriesIntraday\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getActivitiesResourceByDateRangeTimeSeriesIntraday\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getActivitiesResourceByDateRangeTimeSeriesIntraday\");\n      }\n\n      // verify the required parameter 'detailLevel' is set\n      if (detailLevel === undefined || detailLevel === null) {\n        throw new Error(\"Missing the required parameter 'detailLevel' when calling getActivitiesResourceByDateRangeTimeSeriesIntraday\");\n      }\n\n      // verify the required parameter 'startTime' is set\n      if (startTime === undefined || startTime === null) {\n        throw new Error(\"Missing the required parameter 'startTime' when calling getActivitiesResourceByDateRangeTimeSeriesIntraday\");\n      }\n\n      // verify the required parameter 'endTime' is set\n      if (endTime === undefined || endTime === null) {\n        throw new Error(\"Missing the required parameter 'endTime' when calling getActivitiesResourceByDateRangeTimeSeriesIntraday\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'date': _date,\n        'end-date': endDate,\n        'detail-level': detailLevel,\n        'start-time': startTime,\n        'end-time': endTime\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/{resource-path}/date/{date}/{end-date}/{detail-level}/time/{start-time}/{end-time}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesResourceByDateTimeSeriesIntraday operation.\n     * @callback module:api/ActivityIntradayTimeSeriesApi~getActivitiesResourceByDateTimeSeriesIntradayCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Intraday Time Series\n     * Returns the Intraday Time Series for a given resource in the format requested.\n     * @param {module:model/String} resourcePath The resource-path; see options in the Resource Path Options section in the full documentation.\n     * @param {Date} _date The date in the format yyyy-MM-dd or today.\n     * @param {String} detailLevel Number of data points to include. Either 1min or 15min.\n     * @param {String} startTime The start of the period in the format HH:mm.\n     * @param {String} endTime The end of the period in the format HH:mm.\n     * @param {module:api/ActivityIntradayTimeSeriesApi~getActivitiesResourceByDateTimeSeriesIntradayCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesResourceByDateTimeSeriesIntraday = function(resourcePath, _date, detailLevel, startTime, endTime, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getActivitiesResourceByDateTimeSeriesIntraday\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getActivitiesResourceByDateTimeSeriesIntraday\");\n      }\n\n      // verify the required parameter 'detailLevel' is set\n      if (detailLevel === undefined || detailLevel === null) {\n        throw new Error(\"Missing the required parameter 'detailLevel' when calling getActivitiesResourceByDateTimeSeriesIntraday\");\n      }\n\n      // verify the required parameter 'startTime' is set\n      if (startTime === undefined || startTime === null) {\n        throw new Error(\"Missing the required parameter 'startTime' when calling getActivitiesResourceByDateTimeSeriesIntraday\");\n      }\n\n      // verify the required parameter 'endTime' is set\n      if (endTime === undefined || endTime === null) {\n        throw new Error(\"Missing the required parameter 'endTime' when calling getActivitiesResourceByDateTimeSeriesIntraday\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'date': _date,\n        'detail-level': detailLevel,\n        'start-time': startTime,\n        'end-time': endTime\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/{resource-path}/date/{date}/1d/{detail-level}/time/{start-time}/{end-time}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.ActivityTimeSeriesApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * ActivityTimeSeries service.\n   * @module api/ActivityTimeSeriesApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new ActivityTimeSeriesApi. \n   * @alias module:api/ActivityTimeSeriesApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getActivitiesResourceByDatePeriod operation.\n     * @callback module:api/ActivityTimeSeriesApi~getActivitiesResourceByDatePeriodCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Activity Time Series\n     * Returns time series data in the specified range for a given resource in the format requested using units in the unit system that corresponds to the Accept-Language header provided.\n     * @param {module:model/String} resourcePath The resource-path; see options in the Resource Path Options section in the full documentation.\n     * @param {Date} _date The end date of the period specified in the format yyyy-MM-dd or today.\n     * @param {String} period The range for which data will be returned. Options are 1d, 7d, 30d, 1w, 1m, 3m, 6m, 1y, or max.\n     * @param {module:api/ActivityTimeSeriesApi~getActivitiesResourceByDatePeriodCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesResourceByDatePeriod = function(resourcePath, _date, period, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getActivitiesResourceByDatePeriod\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getActivitiesResourceByDatePeriod\");\n      }\n\n      // verify the required parameter 'period' is set\n      if (period === undefined || period === null) {\n        throw new Error(\"Missing the required parameter 'period' when calling getActivitiesResourceByDatePeriod\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'date': _date,\n        'period': period\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/{resource-path}/date/{date}/{period}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesResourceByDateRange operation.\n     * @callback module:api/ActivityTimeSeriesApi~getActivitiesResourceByDateRangeCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Activity Resource by Date Range\n     * Returns activities time series data in the specified range for a given resource.\n     * @param {module:model/String} resourcePath The resource-path; see options in the Resource Path Options section in the full documentation.\n     * @param {Date} baseDate The range start date in the format yyyy-MM-dd or today.\n     * @param {Date} endDate The end date of the range.\n     * @param {module:api/ActivityTimeSeriesApi~getActivitiesResourceByDateRangeCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesResourceByDateRange = function(resourcePath, baseDate, endDate, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getActivitiesResourceByDateRange\");\n      }\n\n      // verify the required parameter 'baseDate' is set\n      if (baseDate === undefined || baseDate === null) {\n        throw new Error(\"Missing the required parameter 'baseDate' when calling getActivitiesResourceByDateRange\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getActivitiesResourceByDateRange\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'base-date': baseDate,\n        'end-date': endDate\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/{resource-path}/date/{base-date}/{end-date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesTrackerResourceByDatePeriod operation.\n     * @callback module:api/ActivityTimeSeriesApi~getActivitiesTrackerResourceByDatePeriodCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Activity Time Series\n     * Returns time series data in the specified range for a given resource in the format requested using units in the unit system that corresponds to the Accept-Language header provided.\n     * @param {module:model/String} resourcePath The resource-path; see options in the Resource Path Options section in the full documentation.\n     * @param {Date} _date The end date of the period specified in the format yyyy-MM-dd or today.\n     * @param {String} period The range for which data will be returned. Options are 1d, 7d, 30d, 1w, 1m, 3m, 6m, 1y, or max.\n     * @param {module:api/ActivityTimeSeriesApi~getActivitiesTrackerResourceByDatePeriodCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesTrackerResourceByDatePeriod = function(resourcePath, _date, period, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getActivitiesTrackerResourceByDatePeriod\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getActivitiesTrackerResourceByDatePeriod\");\n      }\n\n      // verify the required parameter 'period' is set\n      if (period === undefined || period === null) {\n        throw new Error(\"Missing the required parameter 'period' when calling getActivitiesTrackerResourceByDatePeriod\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'date': _date,\n        'period': period\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/tracker/{resource-path}/date/{date}/{period}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getActivitiesTrackerResourceByDateRange operation.\n     * @callback module:api/ActivityTimeSeriesApi~getActivitiesTrackerResourceByDateRangeCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Activity Tracker Resource by Date Range Time Series\n     * Returns time series data in the specified range for a given resource.\n     * @param {module:model/String} resourcePath The resource-path; see options in the Resource Path Options section in the full documentation.\n     * @param {Date} baseDate The range start date in the format yyyy-MM-dd or today.\n     * @param {Date} endDate The end date of the range.\n     * @param {module:api/ActivityTimeSeriesApi~getActivitiesTrackerResourceByDateRangeCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getActivitiesTrackerResourceByDateRange = function(resourcePath, baseDate, endDate, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getActivitiesTrackerResourceByDateRange\");\n      }\n\n      // verify the required parameter 'baseDate' is set\n      if (baseDate === undefined || baseDate === null) {\n        throw new Error(\"Missing the required parameter 'baseDate' when calling getActivitiesTrackerResourceByDateRange\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getActivitiesTrackerResourceByDateRange\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'base-date': baseDate,\n        'end-date': endDate\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/x-www-form-urlencoded'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/tracker/{resource-path}/date/{base-date}/{end-date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.AuthApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * Auth service.\n   * @module api/AuthApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new AuthApi. \n   * @alias module:api/AuthApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the introspect operation.\n     * @callback module:api/AuthApi~introspectCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Retrieve the active state of an OAuth 2.0 token\n     * Retrieves the active state of an OAuth 2.0 token. It follows https://tools.ietf.org/html/rfc7662.\n     * @param {String} token OAuth 2.0 token to retrieve the state of\n     * @param {module:api/AuthApi~introspectCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.introspect = function(token, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'token' is set\n      if (token === undefined || token === null) {\n        throw new Error(\"Missing the required parameter 'token' when calling introspect\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n        'token': token\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = ['application/x-www-form-urlencoded'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.1/oauth2/introspect', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the oauthToken operation.\n     * @callback module:api/AuthApi~oauthTokenCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get OAuth 2 access token\n     * Retrieves an OAuth 2 access token.\n     * @param {String} clientId This is your Fitbit API application id from your settings on dev.fitbit.com.\n     * @param {String} grantType Authorization grant type. Valid values are &#39;authorization_code&#39; and &#39;refresh_token&#39;.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.authorization The Authorization header must be set to &#39;Basic&#39; followed by a space, then the Base64 encoded string of your application&#39;s client id and secret concatenated with a colon. For example, &#39;Basic Y2xpZW50X2lkOmNsaWVudCBzZWNyZXQ&#x3D;&#39;. The Base64 encoded string, &#39;Y2xpZW50X2lkOmNsaWVudCBzZWNyZXQ&#x3D;&#39;, is decoded as &#39;client_id:client secret&#39;.\n     * @param {String} opts.code Authorization code received in the redirect as URI parameter. Required if using the Authorization Code flow.\n     * @param {String} opts.expiresIn Specify the desired access token lifetime. Defaults to 28800 for 8 hours. The other valid value is 3600 for 1 hour.\n     * @param {String} opts.redirectUri Uri to which the access token will be sent if the request is successful. Required if specified in the redirect to the authorization page. Must be exact match.\n     * @param {String} opts.refreshToken Refresh token issued by Fitbit. Required if &#39;grant_type&#39; is &#39;refresh_token&#39;.\n     * @param {String} opts.state Required if specified in the redirect uri of the authorization page. Must be an exact match.\n     * @param {module:api/AuthApi~oauthTokenCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.oauthToken = function(clientId, grantType, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'clientId' is set\n      if (clientId === undefined || clientId === null) {\n        throw new Error(\"Missing the required parameter 'clientId' when calling oauthToken\");\n      }\n\n      // verify the required parameter 'grantType' is set\n      if (grantType === undefined || grantType === null) {\n        throw new Error(\"Missing the required parameter 'grantType' when calling oauthToken\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'code': opts['code'],\n        'client_id': clientId,\n        'expires_in': opts['expiresIn'],\n        'grant_type': grantType,\n        'redirect_uri': opts['redirectUri'],\n        'refresh_token': opts['refreshToken'],\n        'state': opts['state'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n        'Authorization': opts['authorization']\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/oauth2/token', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.BodyAndWeightApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * BodyAndWeight service.\n   * @module api/BodyAndWeightApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new BodyAndWeightApi. \n   * @alias module:api/BodyAndWeightApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the addBodyFatLog operation.\n     * @callback module:api/BodyAndWeightApi~addBodyFatLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Log Body Fat\n     * Creates a log entry for body fat and returns a response in the format requested.\n     * @param {Number} fat Body fat in the format of X.XX in the unit system that corresponds to the Accept-Language header provided.\n     * @param {Date} _date Log entry date in the format yyyy-MM-dd.\n     * @param {String} time Time of the measurement in hours and minutes in the format HH:mm:ss that is set to the last second of the day if not provided.\n     * @param {module:api/BodyAndWeightApi~addBodyFatLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addBodyFatLog = function(fat, _date, time, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'fat' is set\n      if (fat === undefined || fat === null) {\n        throw new Error(\"Missing the required parameter 'fat' when calling addBodyFatLog\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling addBodyFatLog\");\n      }\n\n      // verify the required parameter 'time' is set\n      if (time === undefined || time === null) {\n        throw new Error(\"Missing the required parameter 'time' when calling addBodyFatLog\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'fat': fat,\n        'date': _date,\n        'time': time,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/fat.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the addWeightLog operation.\n     * @callback module:api/BodyAndWeightApi~addWeightLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Log Weight\n     * Creates log entry for a body weight using units in the unit systems that corresponds to the Accept-Language header provided and gets a response in the format requested.\n     * @param {Number} weight Weight in the format of X.XX.\n     * @param {Date} _date Log entry date in the format yyyy-MM-dd.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.time Time of the measurement; hours and minutes in the format of HH:mm:ss, which is set to the last second of the day if not provided.\n     * @param {module:api/BodyAndWeightApi~addWeightLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addWeightLog = function(weight, _date, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'weight' is set\n      if (weight === undefined || weight === null) {\n        throw new Error(\"Missing the required parameter 'weight' when calling addWeightLog\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling addWeightLog\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'weight': weight,\n        'date': _date,\n        'time': opts['time'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/weight.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteBodyFatLog operation.\n     * @callback module:api/BodyAndWeightApi~deleteBodyFatLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Body Fat Log\n     * Deletes a user&#39;s body fat log entry with the given ID.\n     * @param {Number} bodyFatLogId The ID of the body fat log entry.\n     * @param {module:api/BodyAndWeightApi~deleteBodyFatLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteBodyFatLog = function(bodyFatLogId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'bodyFatLogId' is set\n      if (bodyFatLogId === undefined || bodyFatLogId === null) {\n        throw new Error(\"Missing the required parameter 'bodyFatLogId' when calling deleteBodyFatLog\");\n      }\n\n\n      var pathParams = {\n        'body-fat-log-id': bodyFatLogId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/fat/{body-fat-log-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteWeightLog operation.\n     * @callback module:api/BodyAndWeightApi~deleteWeightLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Weight Log\n     * Deletes a user&#39;s body weight log entrywith the given ID.\n     * @param {Number} bodyWeightLogId The ID of the body weight log entry.\n     * @param {module:api/BodyAndWeightApi~deleteWeightLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteWeightLog = function(bodyWeightLogId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'bodyWeightLogId' is set\n      if (bodyWeightLogId === undefined || bodyWeightLogId === null) {\n        throw new Error(\"Missing the required parameter 'bodyWeightLogId' when calling deleteWeightLog\");\n      }\n\n\n      var pathParams = {\n        'body-weight-log-id': bodyWeightLogId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/weight/{body-weight-log-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getBodyFatByDate operation.\n     * @callback module:api/BodyAndWeightApi~getBodyFatByDateCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Body Fat Logs\n     * Retreives a list of all user&#39;s body fat log entries for a given day in the format requested.\n     * @param {Date} _date The date in the format yyyy-MM-dd.\n     * @param {module:api/BodyAndWeightApi~getBodyFatByDateCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getBodyFatByDate = function(_date, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getBodyFatByDate\");\n      }\n\n\n      var pathParams = {\n        'date': _date\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/fat/date/{date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getBodyFatByDatePeriod operation.\n     * @callback module:api/BodyAndWeightApi~getBodyFatByDatePeriodCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Body Fat Logs\n     * Retreives a list of all user&#39;s body fat log entries for a given day in the format requested.\n     * @param {Date} _date The date in the format yyyy-MM-dd.\n     * @param {String} period The range for which data will be returned. Options are 1d, 7d, 30d, 1w, 1m, 3m, 6m, 1y, or max.\n     * @param {module:api/BodyAndWeightApi~getBodyFatByDatePeriodCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getBodyFatByDatePeriod = function(_date, period, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getBodyFatByDatePeriod\");\n      }\n\n      // verify the required parameter 'period' is set\n      if (period === undefined || period === null) {\n        throw new Error(\"Missing the required parameter 'period' when calling getBodyFatByDatePeriod\");\n      }\n\n\n      var pathParams = {\n        'date': _date,\n        'period': period\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/fat/date/{date}/{period}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getBodyFatByDateRange operation.\n     * @callback module:api/BodyAndWeightApi~getBodyFatByDateRangeCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Body Fat Logs\n     * Retreives a list of all user&#39;s body fat log entries for a given day in the format requested.\n     * @param {Date} baseDate The range start date in the format yyyy-MM-dd or today.\n     * @param {Date} endDate The end date of the range.\n     * @param {module:api/BodyAndWeightApi~getBodyFatByDateRangeCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getBodyFatByDateRange = function(baseDate, endDate, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'baseDate' is set\n      if (baseDate === undefined || baseDate === null) {\n        throw new Error(\"Missing the required parameter 'baseDate' when calling getBodyFatByDateRange\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getBodyFatByDateRange\");\n      }\n\n\n      var pathParams = {\n        'base-date': baseDate,\n        'end-date': endDate\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/fat/date/{base-date}/{end-date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getBodyGoals operation.\n     * @callback module:api/BodyAndWeightApi~getBodyGoalsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Body Goals\n     * Retreives a user&#39;s current body fat percentage or weight goal using units in the unit systems that corresponds to the Accept-Language header providedin the format requested.\n     * @param {String} goalType weight or fat.\n     * @param {module:api/BodyAndWeightApi~getBodyGoalsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getBodyGoals = function(goalType, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'goalType' is set\n      if (goalType === undefined || goalType === null) {\n        throw new Error(\"Missing the required parameter 'goalType' when calling getBodyGoals\");\n      }\n\n\n      var pathParams = {\n        'goal-type': goalType\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/{goal-type}/goal.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getWeightByDate operation.\n     * @callback module:api/BodyAndWeightApi~getWeightByDateCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Weight Logs\n     * Retreives a list of all user&#39;s body weight log entries for a given day using units in the unit systems which corresponds to the Accept-Language header provided.\n     * @param {Date} _date The date in the format yyyy-MM-dd.\n     * @param {module:api/BodyAndWeightApi~getWeightByDateCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getWeightByDate = function(_date, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getWeightByDate\");\n      }\n\n\n      var pathParams = {\n        'date': _date\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/weight/date/{date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getWeightByDatePeriod operation.\n     * @callback module:api/BodyAndWeightApi~getWeightByDatePeriodCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Body Fat Logs\n     * Retreives a list of all user&#39;s body weight log entries for a given day in the format requested.\n     * @param {Date} _date The date in the format yyyy-MM-dd.\n     * @param {String} period The range for which data will be returned. Options are 1d, 7d, 30d, 1w, 1m, 3m, 6m, 1y, or max.\n     * @param {module:api/BodyAndWeightApi~getWeightByDatePeriodCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getWeightByDatePeriod = function(_date, period, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getWeightByDatePeriod\");\n      }\n\n      // verify the required parameter 'period' is set\n      if (period === undefined || period === null) {\n        throw new Error(\"Missing the required parameter 'period' when calling getWeightByDatePeriod\");\n      }\n\n\n      var pathParams = {\n        'date': _date,\n        'period': period\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/weight/date/{date}/{period}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getWeightByDateRange operation.\n     * @callback module:api/BodyAndWeightApi~getWeightByDateRangeCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Body Fat Logs\n     * Retreives a list of all user&#39;s body fat log entries for a given day in the format requested.\n     * @param {Date} baseDate The range start date in the format yyyy-MM-dd or today.\n     * @param {Date} endDate The end date of the range.\n     * @param {module:api/BodyAndWeightApi~getWeightByDateRangeCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getWeightByDateRange = function(baseDate, endDate, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'baseDate' is set\n      if (baseDate === undefined || baseDate === null) {\n        throw new Error(\"Missing the required parameter 'baseDate' when calling getWeightByDateRange\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getWeightByDateRange\");\n      }\n\n\n      var pathParams = {\n        'base-date': baseDate,\n        'end-date': endDate\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/weight/date/{base-date}/{end-date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the updateBodyFatGoal operation.\n     * @callback module:api/BodyAndWeightApi~updateBodyFatGoalCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Update Body Fat Goal\n     * Updates user&#39;s fat percentage goal.\n     * @param {String} fat Target body fat percentage; in the format X.XX.\n     * @param {module:api/BodyAndWeightApi~updateBodyFatGoalCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.updateBodyFatGoal = function(fat, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'fat' is set\n      if (fat === undefined || fat === null) {\n        throw new Error(\"Missing the required parameter 'fat' when calling updateBodyFatGoal\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'fat': fat,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/fat/goal.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the updateWeightGoal operation.\n     * @callback module:api/BodyAndWeightApi~updateWeightGoalCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Update Weight Goal\n     * Updates user&#39;s fat percentage goal.\n     * @param {String} startDate Weight goal start date; in the format yyyy-MM-dd.\n     * @param {String} startWeight Weight goal start weight; in the format X.XX, in the unit systems that corresponds to the Accept-Language header provided.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.weight Weight goal target weight; in the format X.XX, in the unit systems that corresponds to the Accept-Language header provided; required if user doesn&#39;t have an existing weight goal.\n     * @param {module:api/BodyAndWeightApi~updateWeightGoalCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.updateWeightGoal = function(startDate, startWeight, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'startDate' is set\n      if (startDate === undefined || startDate === null) {\n        throw new Error(\"Missing the required parameter 'startDate' when calling updateWeightGoal\");\n      }\n\n      // verify the required parameter 'startWeight' is set\n      if (startWeight === undefined || startWeight === null) {\n        throw new Error(\"Missing the required parameter 'startWeight' when calling updateWeightGoal\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'startDate': startDate,\n        'startWeight': startWeight,\n        'weight': opts['weight'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/log/weight/goal.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.BodyAndWeightTimeSeriesApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * BodyAndWeightTimeSeries service.\n   * @module api/BodyAndWeightTimeSeriesApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new BodyAndWeightTimeSeriesApi. \n   * @alias module:api/BodyAndWeightTimeSeriesApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getBodyResourceByDatePeriod operation.\n     * @callback module:api/BodyAndWeightTimeSeriesApi~getBodyResourceByDatePeriodCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Body Time Series\n     * Returns time series data in the specified range for a given resource in the format requested using units in the unit system that corresponds to the Accept-Language header provided.\n     * @param {module:model/String} resourcePath The resource path, which incudes the bmi, fat, or weight options.\n     * @param {Date} _date The range start date in the format yyyy-MM-dd or today.\n     * @param {String} period The range for which data will be returned. Options are 1d, 7d, 30d, 1w, 1m, 3m, 6m, 1y, or max.\n     * @param {module:api/BodyAndWeightTimeSeriesApi~getBodyResourceByDatePeriodCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getBodyResourceByDatePeriod = function(resourcePath, _date, period, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getBodyResourceByDatePeriod\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getBodyResourceByDatePeriod\");\n      }\n\n      // verify the required parameter 'period' is set\n      if (period === undefined || period === null) {\n        throw new Error(\"Missing the required parameter 'period' when calling getBodyResourceByDatePeriod\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'date': _date,\n        'period': period\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/{resource-path}/date/{date}/{period}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getBodyResourceByDateRange operation.\n     * @callback module:api/BodyAndWeightTimeSeriesApi~getBodyResourceByDateRangeCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Body Time Series\n     * Returns time series data in the specified range for a given resource in the format requested using units in the unit system that corresponds to the Accept-Language header provided.\n     * @param {module:model/String} resourcePath The resource path, which incudes the bmi, fat, or weight options.\n     * @param {Date} baseDate The range start date in the format yyyy-MM-dd or today.\n     * @param {Date} endDate The end date of the range.\n     * @param {module:api/BodyAndWeightTimeSeriesApi~getBodyResourceByDateRangeCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getBodyResourceByDateRange = function(resourcePath, baseDate, endDate, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getBodyResourceByDateRange\");\n      }\n\n      // verify the required parameter 'baseDate' is set\n      if (baseDate === undefined || baseDate === null) {\n        throw new Error(\"Missing the required parameter 'baseDate' when calling getBodyResourceByDateRange\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getBodyResourceByDateRange\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'base-date': baseDate,\n        'end-date': endDate\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/body/{resource-path}/date/{base-date}/{end-date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.DevicesApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * Devices service.\n   * @module api/DevicesApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new DevicesApi. \n   * @alias module:api/DevicesApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the addAlarms operation.\n     * @callback module:api/DevicesApi~addAlarmsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Add Alarm\n     * Adds the alarm settings to a given ID for a given device.\n     * @param {Number} trackerId The ID of the tracker for which data is returned. The tracker-id value is found via the Get Devices endpoint.\n     * @param {String} time Time of day that the alarm vibrates with a UTC timezone offset, e.g. 07:15-08:00.\n     * @param {Boolean} enabled true or false. If false, alarm does not vibrate until enabled is set to true.\n     * @param {String} recurring true or false. If false, the alarm is a single event.\n     * @param {String} weekDays Comma separated list of days of the week on which the alarm vibrates, e.g. MONDAY, TUESDAY.\n     * @param {module:api/DevicesApi~addAlarmsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addAlarms = function(trackerId, time, enabled, recurring, weekDays, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'trackerId' is set\n      if (trackerId === undefined || trackerId === null) {\n        throw new Error(\"Missing the required parameter 'trackerId' when calling addAlarms\");\n      }\n\n      // verify the required parameter 'time' is set\n      if (time === undefined || time === null) {\n        throw new Error(\"Missing the required parameter 'time' when calling addAlarms\");\n      }\n\n      // verify the required parameter 'enabled' is set\n      if (enabled === undefined || enabled === null) {\n        throw new Error(\"Missing the required parameter 'enabled' when calling addAlarms\");\n      }\n\n      // verify the required parameter 'recurring' is set\n      if (recurring === undefined || recurring === null) {\n        throw new Error(\"Missing the required parameter 'recurring' when calling addAlarms\");\n      }\n\n      // verify the required parameter 'weekDays' is set\n      if (weekDays === undefined || weekDays === null) {\n        throw new Error(\"Missing the required parameter 'weekDays' when calling addAlarms\");\n      }\n\n\n      var pathParams = {\n        'tracker-id': trackerId\n      };\n      var queryParams = {\n        'time': time,\n        'enabled': enabled,\n        'recurring': recurring,\n        'weekDays': weekDays,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/devices/tracker/{tracker-id}/alarms.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteAlarms operation.\n     * @callback module:api/DevicesApi~deleteAlarmsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Alarm\n     * Deletes the user&#39;s device alarm entry with the given ID for a given device.\n     * @param {Number} trackerId The ID of the tracker whose alarms is managed. The tracker-id value is found via the Get Devices endpoint.\n     * @param {Number} alarmId The ID of the alarm to be updated. The alarm-id value is found via the Get Alarms endpoint.\n     * @param {module:api/DevicesApi~deleteAlarmsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteAlarms = function(trackerId, alarmId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'trackerId' is set\n      if (trackerId === undefined || trackerId === null) {\n        throw new Error(\"Missing the required parameter 'trackerId' when calling deleteAlarms\");\n      }\n\n      // verify the required parameter 'alarmId' is set\n      if (alarmId === undefined || alarmId === null) {\n        throw new Error(\"Missing the required parameter 'alarmId' when calling deleteAlarms\");\n      }\n\n\n      var pathParams = {\n        'tracker-id': trackerId,\n        'alarm-id': alarmId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/devices/tracker/{tracker-id}/alarms/{alarm-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getAlarms operation.\n     * @callback module:api/DevicesApi~getAlarmsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Alarms\n     * Returns alarms for a device\n     * @param {Number} trackerId The ID of the tracker for which data is returned. The tracker-id value is found via the Get Devices endpoint.\n     * @param {module:api/DevicesApi~getAlarmsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getAlarms = function(trackerId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'trackerId' is set\n      if (trackerId === undefined || trackerId === null) {\n        throw new Error(\"Missing the required parameter 'trackerId' when calling getAlarms\");\n      }\n\n\n      var pathParams = {\n        'tracker-id': trackerId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/devices/tracker/{tracker-id}/alarms.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getDevices operation.\n     * @callback module:api/DevicesApi~getDevicesCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Devices\n     * Returns a list of the Fitbit devices connected to a user&#39;s account.\n     * @param {module:api/DevicesApi~getDevicesCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getDevices = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/devices.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the updateAlarms operation.\n     * @callback module:api/DevicesApi~updateAlarmsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Update Alarm\n     * Updates the alarm entry with a given ID for a given device. It also gets a response in the format requested.\n     * @param {Number} trackerId The ID of the tracker for which data is returned. The tracker-id value is found via the Get Devices endpoint.\n     * @param {Number} alarmId The ID of the alarm to be updated. The alarm-id value is found in the response of the Get Activity endpoint.\n     * @param {String} time Time of day that the alarm vibrates with a UTC timezone offset, e.g. 07:15-08:00.\n     * @param {Boolean} enabled true or false. If false, the alarm does not vibrate until enabled is set to true.\n     * @param {String} recurring true or false. If false, the alarm is a single event.\n     * @param {String} weekDays Comma seperated list of days of the week on which the alarm vibrates, e.g. MONDAY, TUESDAY.\n     * @param {Number} snoozeLength Minutes between alarms.\n     * @param {Number} snoozeCount Maximum snooze count.\n     * @param {module:api/DevicesApi~updateAlarmsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.updateAlarms = function(trackerId, alarmId, time, enabled, recurring, weekDays, snoozeLength, snoozeCount, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'trackerId' is set\n      if (trackerId === undefined || trackerId === null) {\n        throw new Error(\"Missing the required parameter 'trackerId' when calling updateAlarms\");\n      }\n\n      // verify the required parameter 'alarmId' is set\n      if (alarmId === undefined || alarmId === null) {\n        throw new Error(\"Missing the required parameter 'alarmId' when calling updateAlarms\");\n      }\n\n      // verify the required parameter 'time' is set\n      if (time === undefined || time === null) {\n        throw new Error(\"Missing the required parameter 'time' when calling updateAlarms\");\n      }\n\n      // verify the required parameter 'enabled' is set\n      if (enabled === undefined || enabled === null) {\n        throw new Error(\"Missing the required parameter 'enabled' when calling updateAlarms\");\n      }\n\n      // verify the required parameter 'recurring' is set\n      if (recurring === undefined || recurring === null) {\n        throw new Error(\"Missing the required parameter 'recurring' when calling updateAlarms\");\n      }\n\n      // verify the required parameter 'weekDays' is set\n      if (weekDays === undefined || weekDays === null) {\n        throw new Error(\"Missing the required parameter 'weekDays' when calling updateAlarms\");\n      }\n\n      // verify the required parameter 'snoozeLength' is set\n      if (snoozeLength === undefined || snoozeLength === null) {\n        throw new Error(\"Missing the required parameter 'snoozeLength' when calling updateAlarms\");\n      }\n\n      // verify the required parameter 'snoozeCount' is set\n      if (snoozeCount === undefined || snoozeCount === null) {\n        throw new Error(\"Missing the required parameter 'snoozeCount' when calling updateAlarms\");\n      }\n\n\n      var pathParams = {\n        'tracker-id': trackerId,\n        'alarm-id': alarmId\n      };\n      var queryParams = {\n        'time': time,\n        'enabled': enabled,\n        'recurring': recurring,\n        'weekDays': weekDays,\n        'snoozeLength': snoozeLength,\n        'snoozeCount': snoozeCount,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/devices/tracker/{tracker-id}/alarms/{alarm-id}.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.FoodAndWaterApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * FoodAndWater service.\n   * @module api/FoodAndWaterApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new FoodAndWaterApi. \n   * @alias module:api/FoodAndWaterApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the addFavoriteFood operation.\n     * @callback module:api/FoodAndWaterApi~addFavoriteFoodCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Add Favorite Food\n     * Updates a user&#39;s daily activity goals and returns a response using units in the unit system which corresponds to the Accept-Language header provided.\n     * @param {String} foodId The ID of the food to be added to user&#39;s favorites.\n     * @param {module:api/FoodAndWaterApi~addFavoriteFoodCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addFavoriteFood = function(foodId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'foodId' is set\n      if (foodId === undefined || foodId === null) {\n        throw new Error(\"Missing the required parameter 'foodId' when calling addFavoriteFood\");\n      }\n\n\n      var pathParams = {\n        'food-id': foodId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/favorite/{food-id}.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the addFoods operation.\n     * @callback module:api/FoodAndWaterApi~addFoodsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Create Food\n     * Creates a new private food for a user and returns a response in the format requested. The created food is found via the Search Foods call.\n     * @param {String} name The food name.\n     * @param {String} defaultFoodMeasurementUnitId The ID of the default measurement unit. Full list of units can be retrieved via the Get Food Units endpoint.\n     * @param {String} defaultServingSize The size of the default serving. Nutrition values should be provided for this serving size.\n     * @param {String} calories The calories in the default serving size.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.formType Form type; LIQUID or DRY.\n     * @param {String} opts.description The description of the food.\n     * @param {module:api/FoodAndWaterApi~addFoodsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addFoods = function(name, defaultFoodMeasurementUnitId, defaultServingSize, calories, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'name' is set\n      if (name === undefined || name === null) {\n        throw new Error(\"Missing the required parameter 'name' when calling addFoods\");\n      }\n\n      // verify the required parameter 'defaultFoodMeasurementUnitId' is set\n      if (defaultFoodMeasurementUnitId === undefined || defaultFoodMeasurementUnitId === null) {\n        throw new Error(\"Missing the required parameter 'defaultFoodMeasurementUnitId' when calling addFoods\");\n      }\n\n      // verify the required parameter 'defaultServingSize' is set\n      if (defaultServingSize === undefined || defaultServingSize === null) {\n        throw new Error(\"Missing the required parameter 'defaultServingSize' when calling addFoods\");\n      }\n\n      // verify the required parameter 'calories' is set\n      if (calories === undefined || calories === null) {\n        throw new Error(\"Missing the required parameter 'calories' when calling addFoods\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'name': name,\n        'defaultFoodMeasurementUnitId': defaultFoodMeasurementUnitId,\n        'defaultServingSize': defaultServingSize,\n        'calories': calories,\n        'formType': opts['formType'],\n        'description': opts['description'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the addFoodsLog operation.\n     * @callback module:api/FoodAndWaterApi~addFoodsLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Log Food\n     * Creates food log entries for users with or without foodId value.\n     * @param {String} foodId The ID of the food to be logged. Either foodId or foodName must be provided.\n     * @param {String} mealTypeId Meal types. 1&#x3D;Breakfast; 2&#x3D;Morning Snack; 3&#x3D;Lunch; 4&#x3D;Afternoon Snack; 5&#x3D;Dinner; 7&#x3D;Anytime.\n     * @param {String} unitId The ID of units used. Typically retrieved via a previous call to Get Food Logs, Search Foods, or Get Food Units.\n     * @param {String} amount The amount consumed in the format X.XX in the specified unitId.\n     * @param {Date} _date Log entry date in the format yyyy-MM-dd.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.foodName Food entry name. Either foodId or foodName must be provided.\n     * @param {Boolean} opts.favorite The &#x60;true&#x60; value will add the food to the user&#39;s favorites after creating the log entry; while the &#x60;false&#x60; value will not. Valid only with foodId value.\n     * @param {String} opts.brandName Brand name of food. Valid only with foodName parameters.\n     * @param {Number} opts.calories Calories for this serving size. This is allowed with foodName parameter (default to zero); otherwise it is ignored.\n     * @param {module:api/FoodAndWaterApi~addFoodsLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addFoodsLog = function(foodId, mealTypeId, unitId, amount, _date, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'foodId' is set\n      if (foodId === undefined || foodId === null) {\n        throw new Error(\"Missing the required parameter 'foodId' when calling addFoodsLog\");\n      }\n\n      // verify the required parameter 'mealTypeId' is set\n      if (mealTypeId === undefined || mealTypeId === null) {\n        throw new Error(\"Missing the required parameter 'mealTypeId' when calling addFoodsLog\");\n      }\n\n      // verify the required parameter 'unitId' is set\n      if (unitId === undefined || unitId === null) {\n        throw new Error(\"Missing the required parameter 'unitId' when calling addFoodsLog\");\n      }\n\n      // verify the required parameter 'amount' is set\n      if (amount === undefined || amount === null) {\n        throw new Error(\"Missing the required parameter 'amount' when calling addFoodsLog\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling addFoodsLog\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'foodId': foodId,\n        'foodName': opts['foodName'],\n        'mealTypeId': mealTypeId,\n        'unitId': unitId,\n        'amount': amount,\n        'date': _date,\n        'favorite': opts['favorite'],\n        'brandName': opts['brandName'],\n        'calories': opts['calories'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the addMeal operation.\n     * @callback module:api/FoodAndWaterApi~addMealCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Create Meal\n     * Creates a meal with the given food contained in the post body.\n     * @param {String} name Name of the meal.\n     * @param {String} description Short description of the meal.\n     * @param {String} foodId ID of the food to be included in the meal.\n     * @param {String} unitId ID of units used. Typically retrieved via a previous call to Get Food Logs, Search Foods, or Get Food Units.\n     * @param {String} amount Amount consumed; in the format X.XX, in the specified unitId.\n     * @param {module:api/FoodAndWaterApi~addMealCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addMeal = function(name, description, foodId, unitId, amount, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'name' is set\n      if (name === undefined || name === null) {\n        throw new Error(\"Missing the required parameter 'name' when calling addMeal\");\n      }\n\n      // verify the required parameter 'description' is set\n      if (description === undefined || description === null) {\n        throw new Error(\"Missing the required parameter 'description' when calling addMeal\");\n      }\n\n      // verify the required parameter 'foodId' is set\n      if (foodId === undefined || foodId === null) {\n        throw new Error(\"Missing the required parameter 'foodId' when calling addMeal\");\n      }\n\n      // verify the required parameter 'unitId' is set\n      if (unitId === undefined || unitId === null) {\n        throw new Error(\"Missing the required parameter 'unitId' when calling addMeal\");\n      }\n\n      // verify the required parameter 'amount' is set\n      if (amount === undefined || amount === null) {\n        throw new Error(\"Missing the required parameter 'amount' when calling addMeal\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'name': name,\n        'Description': description,\n        'foodId': foodId,\n        'unitId': unitId,\n        'amount': amount,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/meals.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the addUpdateFoodsGoal operation.\n     * @callback module:api/FoodAndWaterApi~addUpdateFoodsGoalCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Update Food Goal\n     * Updates a user&#39;s daily calories consumption goal or food plan and returns a response in the format requested.\n     * @param {Number} calories Manual calorie consumption goal in either calories or intensity must be provided.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.intensity Food plan intensity (MAINTENANCE, EASIER, MEDIUM, KINDAHARD, or HARDER). Either calories or intensity must be provided.\n     * @param {String} opts.personalized Food plan type; true or false.\n     * @param {module:api/FoodAndWaterApi~addUpdateFoodsGoalCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addUpdateFoodsGoal = function(calories, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'calories' is set\n      if (calories === undefined || calories === null) {\n        throw new Error(\"Missing the required parameter 'calories' when calling addUpdateFoodsGoal\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'calories': calories,\n        'intensity': opts['intensity'],\n        'personalized': opts['personalized'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/goal.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the addUpdateWaterGoal operation.\n     * @callback module:api/FoodAndWaterApi~addUpdateWaterGoalCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Update Water Goal\n     * Updates a user&#39;s daily calories consumption goal or food plan and returns a response in the format requested.\n     * @param {Number} target The target water goal in the format X.X is set in unit based on locale.\n     * @param {module:api/FoodAndWaterApi~addUpdateWaterGoalCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addUpdateWaterGoal = function(target, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'target' is set\n      if (target === undefined || target === null) {\n        throw new Error(\"Missing the required parameter 'target' when calling addUpdateWaterGoal\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'target': target,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/water/goal.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the addWaterLog operation.\n     * @callback module:api/FoodAndWaterApi~addWaterLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Log Water\n     * Creates a log entry for water using units in the unit systems that corresponds to the Accept-Language header provided.\n     * @param {Date} _date The date of records to be returned in the format yyyy-MM-dd.\n     * @param {Number} amount The amount consumption in the format X.XX and in the specified waterUnit or in the unit system that corresponds to the Accept-Language header provided.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.unit Water measurement unit; &#x60;ml&#x60;, &#x60;fl oz&#x60;, or &#x60;cup&#x60;.\n     * @param {module:api/FoodAndWaterApi~addWaterLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addWaterLog = function(_date, amount, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling addWaterLog\");\n      }\n\n      // verify the required parameter 'amount' is set\n      if (amount === undefined || amount === null) {\n        throw new Error(\"Missing the required parameter 'amount' when calling addWaterLog\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'date': _date,\n        'amount': amount,\n        'unit': opts['unit'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/water.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteFavoriteFood operation.\n     * @callback module:api/FoodAndWaterApi~deleteFavoriteFoodCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Favorite Food\n     * Deletes a food with the given ID to the user&#39;s list of favorite foods.\n     * @param {String} foodId The ID of the food to be deleted from user&#39;s favorites.\n     * @param {module:api/FoodAndWaterApi~deleteFavoriteFoodCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteFavoriteFood = function(foodId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'foodId' is set\n      if (foodId === undefined || foodId === null) {\n        throw new Error(\"Missing the required parameter 'foodId' when calling deleteFavoriteFood\");\n      }\n\n\n      var pathParams = {\n        'food-id': foodId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/favorite/{food-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteFoods operation.\n     * @callback module:api/FoodAndWaterApi~deleteFoodsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Custom Food\n     * Deletes custom food for a user and returns a response in the format requested.\n     * @param {String} foodId The ID of the food to be deleted.\n     * @param {module:api/FoodAndWaterApi~deleteFoodsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteFoods = function(foodId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'foodId' is set\n      if (foodId === undefined || foodId === null) {\n        throw new Error(\"Missing the required parameter 'foodId' when calling deleteFoods\");\n      }\n\n\n      var pathParams = {\n        'food-id': foodId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/{food-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteFoodsLog operation.\n     * @callback module:api/FoodAndWaterApi~deleteFoodsLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Food Log\n     * Deletes a user&#39;s food log entry with the given ID.\n     * @param {String} foodLogId The ID of the food log entry to be deleted.\n     * @param {module:api/FoodAndWaterApi~deleteFoodsLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteFoodsLog = function(foodLogId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'foodLogId' is set\n      if (foodLogId === undefined || foodLogId === null) {\n        throw new Error(\"Missing the required parameter 'foodLogId' when calling deleteFoodsLog\");\n      }\n\n\n      var pathParams = {\n        'food-log-id': foodLogId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/{food-log-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteMeal operation.\n     * @callback module:api/FoodAndWaterApi~deleteMealCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Meal\n     * Deletes a user&#39;s meal with the given meal id.\n     * @param {String} mealId Id of the meal to delete.\n     * @param {module:api/FoodAndWaterApi~deleteMealCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteMeal = function(mealId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'mealId' is set\n      if (mealId === undefined || mealId === null) {\n        throw new Error(\"Missing the required parameter 'mealId' when calling deleteMeal\");\n      }\n\n\n      var pathParams = {\n        'meal-id': mealId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/meals/{meal-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteWaterLog operation.\n     * @callback module:api/FoodAndWaterApi~deleteWaterLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Water Log\n     * Deletes a user&#39;s water log entry with the given ID.\n     * @param {String} waterLogId The ID of the waterUnit log entry to be deleted.\n     * @param {module:api/FoodAndWaterApi~deleteWaterLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteWaterLog = function(waterLogId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'waterLogId' is set\n      if (waterLogId === undefined || waterLogId === null) {\n        throw new Error(\"Missing the required parameter 'waterLogId' when calling deleteWaterLog\");\n      }\n\n\n      var pathParams = {\n        'water-log-id': waterLogId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/water/{water-log-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFavoriteFoods operation.\n     * @callback module:api/FoodAndWaterApi~getFavoriteFoodsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Favorite Foods\n     * Returns a list of a user&#39;s favorite foods in the format requested. A favorite food in the list provides a quick way to log the food via the Log Food endpoint.\n     * @param {module:api/FoodAndWaterApi~getFavoriteFoodsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFavoriteFoods = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/favorite.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFoodsByDate operation.\n     * @callback module:api/FoodAndWaterApi~getFoodsByDateCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Food Logs\n     * Retreives a summary and list of a user&#39;s food log entries for a given day in the format requested.\n     * @param {Date} _date The date of records to be returned. In the format yyyy-MM-dd.\n     * @param {module:api/FoodAndWaterApi~getFoodsByDateCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFoodsByDate = function(_date, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getFoodsByDate\");\n      }\n\n\n      var pathParams = {\n        'date': _date\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/date/{date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFoodsGoal operation.\n     * @callback module:api/FoodAndWaterApi~getFoodsGoalCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Food Goals\n     * Returns a user&#39;s current daily calorie consumption goal and/or foodPlan value in the format requested.\n     * @param {module:api/FoodAndWaterApi~getFoodsGoalCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFoodsGoal = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/goal.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFoodsInfo operation.\n     * @callback module:api/FoodAndWaterApi~getFoodsInfoCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Food\n     * Returns the details of a specific food in the Fitbit food databases or a private food that an authorized user has entered in the format requested.\n     * @param {String} foodId The ID of the food.\n     * @param {module:api/FoodAndWaterApi~getFoodsInfoCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFoodsInfo = function(foodId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'foodId' is set\n      if (foodId === undefined || foodId === null) {\n        throw new Error(\"Missing the required parameter 'foodId' when calling getFoodsInfo\");\n      }\n\n\n      var pathParams = {\n        'food-id': foodId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/foods/{food-id}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFoodsList operation.\n     * @callback module:api/FoodAndWaterApi~getFoodsListCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Search Foods\n     * Returns a list of public foods from the Fitbit food database and private food the user created in the format requested.\n     * @param {String} query The URL-encoded search query.\n     * @param {module:api/FoodAndWaterApi~getFoodsListCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFoodsList = function(query, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'query' is set\n      if (query === undefined || query === null) {\n        throw new Error(\"Missing the required parameter 'query' when calling getFoodsList\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'query': query,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/foods/search.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFoodsLocales operation.\n     * @callback module:api/FoodAndWaterApi~getFoodsLocalesCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Food Locales\n     * Returns the food locales that the user may choose to search, log, and create food in.\n     * @param {module:api/FoodAndWaterApi~getFoodsLocalesCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFoodsLocales = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/foods/locales.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFoodsUnits operation.\n     * @callback module:api/FoodAndWaterApi~getFoodsUnitsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Food Units\n     * Returns a list of all valid Fitbit food units in the format requested.\n     * @param {module:api/FoodAndWaterApi~getFoodsUnitsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFoodsUnits = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/foods/units.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFrequentFoods operation.\n     * @callback module:api/FoodAndWaterApi~getFrequentFoodsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Frequent Foods\n     * Returns a list of a user&#39;s frequent foods in the format requested. A frequent food in the list provides a quick way to log the food via the Log Food endpoint.\n     * @param {module:api/FoodAndWaterApi~getFrequentFoodsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFrequentFoods = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/frequent.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getMeals operation.\n     * @callback module:api/FoodAndWaterApi~getMealsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Meals\n     * Returns a list of meals created by user in the user&#39;s food log in the format requested. User creates and manages meals on the Food Log tab on the website.\n     * @param {module:api/FoodAndWaterApi~getMealsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getMeals = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/meals.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getRecentFoods operation.\n     * @callback module:api/FoodAndWaterApi~getRecentFoodsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Recent Foods\n     * Returns a list of a user&#39;s frequent foods in the format requested. A frequent food in the list provides a quick way to log the food via the Log Food endpoint.\n     * @param {module:api/FoodAndWaterApi~getRecentFoodsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getRecentFoods = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/recent.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getWaterByDate operation.\n     * @callback module:api/FoodAndWaterApi~getWaterByDateCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Water Logs\n     * Retreives a summary and list of a user&#39;s water log entries for a given day in the requested using units in the unit system that corresponds to the Accept-Language header provided.\n     * @param {Date} _date The date of records to be returned. In the format yyyy-MM-dd.\n     * @param {module:api/FoodAndWaterApi~getWaterByDateCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getWaterByDate = function(_date, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getWaterByDate\");\n      }\n\n\n      var pathParams = {\n        'date': _date\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/water/date/{date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getWaterGoal operation.\n     * @callback module:api/FoodAndWaterApi~getWaterGoalCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Water Goal\n     * Retreives a summary and list of a user&#39;s water goal entries for a given day in the requested using units in the unit system that corresponds to the Accept-Language header provided.\n     * @param {module:api/FoodAndWaterApi~getWaterGoalCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getWaterGoal = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/water/goal.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the updateMeal operation.\n     * @callback module:api/FoodAndWaterApi~updateMealCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Edit Meal\n     * Replaces an existing meal with the contents of the request. The response contains the updated meal.\n     * @param {String} mealId Id of the meal to edit.\n     * @param {String} name Name of the meal.\n     * @param {String} description Short description of the meal.\n     * @param {String} foodId ID of the food to be included in the meal.\n     * @param {String} unitId ID of units used. Typically retrieved via a previous call to Get Food Logs, Search Foods, or Get Food Units.\n     * @param {String} amount Amount consumed; in the format X.XX, in the specified unitId.\n     * @param {module:api/FoodAndWaterApi~updateMealCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.updateMeal = function(mealId, name, description, foodId, unitId, amount, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'mealId' is set\n      if (mealId === undefined || mealId === null) {\n        throw new Error(\"Missing the required parameter 'mealId' when calling updateMeal\");\n      }\n\n      // verify the required parameter 'name' is set\n      if (name === undefined || name === null) {\n        throw new Error(\"Missing the required parameter 'name' when calling updateMeal\");\n      }\n\n      // verify the required parameter 'description' is set\n      if (description === undefined || description === null) {\n        throw new Error(\"Missing the required parameter 'description' when calling updateMeal\");\n      }\n\n      // verify the required parameter 'foodId' is set\n      if (foodId === undefined || foodId === null) {\n        throw new Error(\"Missing the required parameter 'foodId' when calling updateMeal\");\n      }\n\n      // verify the required parameter 'unitId' is set\n      if (unitId === undefined || unitId === null) {\n        throw new Error(\"Missing the required parameter 'unitId' when calling updateMeal\");\n      }\n\n      // verify the required parameter 'amount' is set\n      if (amount === undefined || amount === null) {\n        throw new Error(\"Missing the required parameter 'amount' when calling updateMeal\");\n      }\n\n\n      var pathParams = {\n        'meal-id': mealId\n      };\n      var queryParams = {\n        'name': name,\n        'Description': description,\n        'foodId': foodId,\n        'unitId': unitId,\n        'amount': amount,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/meals/{meal-id}.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the updateWaterLog operation.\n     * @callback module:api/FoodAndWaterApi~updateWaterLogCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Update Water Log\n     * Updates a user&#39;s water log entry with the given ID.\n     * @param {String} waterLogId The ID of the waterUnit log entry to be deleted.\n     * @param {String} amount Amount consumed; in the format X.X and in the specified waterUnit or in the unit system that corresponds to the Accept-Language header provided.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.unit Water measurement unit. &#39;ml&#39;, &#39;fl oz&#39;, or &#39;cup&#39;.\n     * @param {module:api/FoodAndWaterApi~updateWaterLogCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.updateWaterLog = function(waterLogId, amount, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'waterLogId' is set\n      if (waterLogId === undefined || waterLogId === null) {\n        throw new Error(\"Missing the required parameter 'waterLogId' when calling updateWaterLog\");\n      }\n\n      // verify the required parameter 'amount' is set\n      if (amount === undefined || amount === null) {\n        throw new Error(\"Missing the required parameter 'amount' when calling updateWaterLog\");\n      }\n\n\n      var pathParams = {\n        'water-log-id': waterLogId\n      };\n      var queryParams = {\n        'amount': amount,\n        'unit': opts['unit'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/water/{water-log-id}.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.FoodAndWaterTimeSeriesApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * FoodAndWaterTimeSeries service.\n   * @module api/FoodAndWaterTimeSeriesApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new FoodAndWaterTimeSeriesApi. \n   * @alias module:api/FoodAndWaterTimeSeriesApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getFoodsByDateRange operation.\n     * @callback module:api/FoodAndWaterTimeSeriesApi~getFoodsByDateRangeCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Food or Water Time Series\n     * Updates a user&#39;s daily activity goals and returns a response using units in the unit system which corresponds to the Accept-Language header provided.\n     * @param {module:model/String} resourcePath The resouce path. See options in the Resouce Path Options section in the full documentation.\n     * @param {Date} baseDate The range start date in the format yyyy-MM-dd or today.\n     * @param {Date} endDate The end date of the range.\n     * @param {module:api/FoodAndWaterTimeSeriesApi~getFoodsByDateRangeCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFoodsByDateRange = function(resourcePath, baseDate, endDate, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getFoodsByDateRange\");\n      }\n\n      // verify the required parameter 'baseDate' is set\n      if (baseDate === undefined || baseDate === null) {\n        throw new Error(\"Missing the required parameter 'baseDate' when calling getFoodsByDateRange\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getFoodsByDateRange\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'base-date': baseDate,\n        'end-date': endDate\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/{resource-path}/date/{base-date}/{end-date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFoodsResourceByDatePeriod operation.\n     * @callback module:api/FoodAndWaterTimeSeriesApi~getFoodsResourceByDatePeriodCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Food or Water Time Series\n     * Updates a user&#39;s daily activity goals and returns a response using units in the unit system which corresponds to the Accept-Language header provided.\n     * @param {module:model/String} resourcePath The resouce path. See options in the Resouce Path Options section in the full documentation.\n     * @param {Date} _date The end date of the period specified in the format yyyy-MM-dd or today.\n     * @param {String} period The range for which data will be returned. Options are 1d, 7d, 30d, 1w, 3m, 6m, 1y, or max.\n     * @param {module:api/FoodAndWaterTimeSeriesApi~getFoodsResourceByDatePeriodCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFoodsResourceByDatePeriod = function(resourcePath, _date, period, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath === undefined || resourcePath === null) {\n        throw new Error(\"Missing the required parameter 'resourcePath' when calling getFoodsResourceByDatePeriod\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getFoodsResourceByDatePeriod\");\n      }\n\n      // verify the required parameter 'period' is set\n      if (period === undefined || period === null) {\n        throw new Error(\"Missing the required parameter 'period' when calling getFoodsResourceByDatePeriod\");\n      }\n\n\n      var pathParams = {\n        'resource-path': resourcePath,\n        'date': _date,\n        'period': period\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/foods/log/{resource-path}/date/{date}/{period}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.FriendsApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * Friends service.\n   * @module api/FriendsApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new FriendsApi. \n   * @alias module:api/FriendsApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the createFriendsInvitations operation.\n     * @callback module:api/FriendsApi~createFriendsInvitationsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Invite Friends\n     * Creates an invitation to become friends with the authorized user.  Either invitedUserEmail or invitedUserId needs to be provided.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.invitedUserEmail Email of the user to invite.\n     * @param {String} opts.invitedUserId Encoded ID of the user to invite.\n     * @param {module:api/FriendsApi~createFriendsInvitationsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.createFriendsInvitations = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'invitedUserEmail': opts['invitedUserEmail'],\n        'invitedUserId': opts['invitedUserId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['text/plain'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.1/user/-/friends/invitations', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFriends operation.\n     * @callback module:api/FriendsApi~getFriendsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Friends\n     * Returns data of a user&#39;s friends in the format requested using units in the unit system which corresponds to the Accept-Language header provided.\n     * @param {module:api/FriendsApi~getFriendsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFriends = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.1/user/-/friends.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFriendsInvitations operation.\n     * @callback module:api/FriendsApi~getFriendsInvitationsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Friend Invitations\n     * Returns a list of invitations to become friends with a user in the format requested.\n     * @param {module:api/FriendsApi~getFriendsInvitationsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFriendsInvitations = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.1/user/-/friends/invitations.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getFriendsLeaderboard operation.\n     * @callback module:api/FriendsApi~getFriendsLeaderboardCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Friends Leaderboard\n     * Returns data of a user&#39;s friends in the format requested using units in the unit system which corresponds to the Accept-Language header provided.\n     * @param {module:api/FriendsApi~getFriendsLeaderboardCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getFriendsLeaderboard = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.1/user/-/leaderboard/friends.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the respondFriendsInvitation operation.\n     * @callback module:api/FriendsApi~respondFriendsInvitationCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Respond to Friend Invitation\n     * Accepts or rejects an invitation to become friends wit inviting user.\n     * @param {String} fromUserId The encoded ID of a user from which to accept or reject invitation.\n     * @param {String} accept Accept or reject invitation; true or false.\n     * @param {module:api/FriendsApi~respondFriendsInvitationCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.respondFriendsInvitation = function(fromUserId, accept, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'fromUserId' is set\n      if (fromUserId === undefined || fromUserId === null) {\n        throw new Error(\"Missing the required parameter 'fromUserId' when calling respondFriendsInvitation\");\n      }\n\n      // verify the required parameter 'accept' is set\n      if (accept === undefined || accept === null) {\n        throw new Error(\"Missing the required parameter 'accept' when calling respondFriendsInvitation\");\n      }\n\n\n      var pathParams = {\n        'from-user-id': fromUserId\n      };\n      var queryParams = {\n        'accept': accept,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['text/plain'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.1/user/-/friends/invitations/{from-user-id}', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.HeartRateIntradayTimeSeriesApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * HeartRateIntradayTimeSeries service.\n   * @module api/HeartRateIntradayTimeSeriesApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new HeartRateIntradayTimeSeriesApi. \n   * @alias module:api/HeartRateIntradayTimeSeriesApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getHeartByDateIntraday operation.\n     * @callback module:api/HeartRateIntradayTimeSeriesApi~getHeartByDateIntradayCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Heart Rate Intraday Time Series\n     * Returns the intraday time series for a given resource in the format requested. If your application has the appropriate access, your calls to a time series endpoint for a specific day (by using start and end dates on the same day or a period of 1d), the response will include extended intraday values with a one-minute detail level for that day. Unlike other time series calls that allow fetching data of other users, intraday data is available only for and to the authorized user.\n     * @param {Date} _date The date in the format of yyyy-MM-dd or today.\n     * @param {String} detailLevel The number of data points to include either 1sec or 1min.\n     * @param {module:api/HeartRateIntradayTimeSeriesApi~getHeartByDateIntradayCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getHeartByDateIntraday = function(_date, detailLevel, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getHeartByDateIntraday\");\n      }\n\n      // verify the required parameter 'detailLevel' is set\n      if (detailLevel === undefined || detailLevel === null) {\n        throw new Error(\"Missing the required parameter 'detailLevel' when calling getHeartByDateIntraday\");\n      }\n\n\n      var pathParams = {\n        'date': _date,\n        'detail-level': detailLevel\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/heart/date/{date}/1d/{detail-level}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getHeartByDateRangeIntraday operation.\n     * @callback module:api/HeartRateIntradayTimeSeriesApi~getHeartByDateRangeIntradayCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Heart Rate Intraday Time Series\n     * Returns the intraday time series for a given resource in the format requested. If your application has the appropriate access, your calls to a time series endpoint for a specific day (by using start and end dates on the same day or a period of 1d), the response will include extended intraday values with a one-minute detail level for that day. Unlike other time series calls that allow fetching data of other users, intraday data is available only for and to the authorized user.\n     * @param {Date} _date The date in the format of yyyy-MM-dd or today.\n     * @param {Date} endDate The end date in the format of yyyy-MM-dd or today.\n     * @param {String} detailLevel The number of data points to include either 1sec or 1min.\n     * @param {module:api/HeartRateIntradayTimeSeriesApi~getHeartByDateRangeIntradayCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getHeartByDateRangeIntraday = function(_date, endDate, detailLevel, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getHeartByDateRangeIntraday\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getHeartByDateRangeIntraday\");\n      }\n\n      // verify the required parameter 'detailLevel' is set\n      if (detailLevel === undefined || detailLevel === null) {\n        throw new Error(\"Missing the required parameter 'detailLevel' when calling getHeartByDateRangeIntraday\");\n      }\n\n\n      var pathParams = {\n        'date': _date,\n        'end-date': endDate,\n        'detail-level': detailLevel\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/heart/date/{date}/{end-date}/{detail-level}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getHeartByDateRangeTimestampIntraday operation.\n     * @callback module:api/HeartRateIntradayTimeSeriesApi~getHeartByDateRangeTimestampIntradayCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Heart Rate Intraday Time Series\n     * Returns the intraday time series for a given resource in the format requested. If your application has the appropriate access, your calls to a time series endpoint for a specific day (by using start and end dates on the same day or a period of 1d), the response will include extended intraday values with a one-minute detail level for that day. Unlike other time series calls that allow fetching data of other users, intraday data is available only for and to the authorized user.\n     * @param {Date} _date The date in the format of yyyy-MM-dd or today.\n     * @param {Date} endDate The end date in the format of yyyy-MM-dd or today.\n     * @param {String} detailLevel The number of data points to include either 1sec or 1min.\n     * @param {String} startTime The start of the period in the format of HH:mm.\n     * @param {String} endTime The end time of the period in the format of HH:mm.\n     * @param {module:api/HeartRateIntradayTimeSeriesApi~getHeartByDateRangeTimestampIntradayCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getHeartByDateRangeTimestampIntraday = function(_date, endDate, detailLevel, startTime, endTime, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getHeartByDateRangeTimestampIntraday\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getHeartByDateRangeTimestampIntraday\");\n      }\n\n      // verify the required parameter 'detailLevel' is set\n      if (detailLevel === undefined || detailLevel === null) {\n        throw new Error(\"Missing the required parameter 'detailLevel' when calling getHeartByDateRangeTimestampIntraday\");\n      }\n\n      // verify the required parameter 'startTime' is set\n      if (startTime === undefined || startTime === null) {\n        throw new Error(\"Missing the required parameter 'startTime' when calling getHeartByDateRangeTimestampIntraday\");\n      }\n\n      // verify the required parameter 'endTime' is set\n      if (endTime === undefined || endTime === null) {\n        throw new Error(\"Missing the required parameter 'endTime' when calling getHeartByDateRangeTimestampIntraday\");\n      }\n\n\n      var pathParams = {\n        'date': _date,\n        'end-date': endDate,\n        'detail-level': detailLevel,\n        'start-time': startTime,\n        'end-time': endTime\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/heart/date/{date}/{end-date}/{detail-level}/time/{start-time}/{end-time}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getHeartByDateTimestampIntraday operation.\n     * @callback module:api/HeartRateIntradayTimeSeriesApi~getHeartByDateTimestampIntradayCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Heart Rate Intraday Time Series\n     * Returns the intraday time series for a given resource in the format requested. If your application has the appropriate access, your calls to a time series endpoint for a specific day (by using start and end dates on the same day or a period of 1d), the response will include extended intraday values with a one-minute detail level for that day. Unlike other time series calls that allow fetching data of other users, intraday data is available only for and to the authorized user.\n     * @param {Date} _date The date in the format of yyyy-MM-dd or today.\n     * @param {String} detailLevel The number of data points to include either 1sec or 1min.\n     * @param {String} startTime The start of the period in the format of HH:mm.\n     * @param {String} endTime The end time of the period in the format of HH:mm.\n     * @param {module:api/HeartRateIntradayTimeSeriesApi~getHeartByDateTimestampIntradayCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getHeartByDateTimestampIntraday = function(_date, detailLevel, startTime, endTime, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getHeartByDateTimestampIntraday\");\n      }\n\n      // verify the required parameter 'detailLevel' is set\n      if (detailLevel === undefined || detailLevel === null) {\n        throw new Error(\"Missing the required parameter 'detailLevel' when calling getHeartByDateTimestampIntraday\");\n      }\n\n      // verify the required parameter 'startTime' is set\n      if (startTime === undefined || startTime === null) {\n        throw new Error(\"Missing the required parameter 'startTime' when calling getHeartByDateTimestampIntraday\");\n      }\n\n      // verify the required parameter 'endTime' is set\n      if (endTime === undefined || endTime === null) {\n        throw new Error(\"Missing the required parameter 'endTime' when calling getHeartByDateTimestampIntraday\");\n      }\n\n\n      var pathParams = {\n        'date': _date,\n        'detail-level': detailLevel,\n        'start-time': startTime,\n        'end-time': endTime\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/heart/date/{date}/1d/{detail-level}/time/{start-time}/{end-time}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.HeartRateTimeSeriesApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * HeartRateTimeSeries service.\n   * @module api/HeartRateTimeSeriesApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new HeartRateTimeSeriesApi. \n   * @alias module:api/HeartRateTimeSeriesApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getHeartByDatePeriod operation.\n     * @callback module:api/HeartRateTimeSeriesApi~getHeartByDatePeriodCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Heart Rate Time Series\n     * Returns the time series data in the specified range for a given resource in the format requested using units in the unit systems that corresponds to the Accept-Language header provided.\n     * @param {Date} _date The end date of the period specified in the format yyyy-MM-dd or today.\n     * @param {String} period The range of which data will be returned. Options are 1d, 7d, 30d, 1w, and 1m.\n     * @param {module:api/HeartRateTimeSeriesApi~getHeartByDatePeriodCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getHeartByDatePeriod = function(_date, period, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getHeartByDatePeriod\");\n      }\n\n      // verify the required parameter 'period' is set\n      if (period === undefined || period === null) {\n        throw new Error(\"Missing the required parameter 'period' when calling getHeartByDatePeriod\");\n      }\n\n\n      var pathParams = {\n        'date': _date,\n        'period': period\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/heart/date/{date}/{period}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getHeartByDateRange operation.\n     * @callback module:api/HeartRateTimeSeriesApi~getHeartByDateRangeCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Heart Rate Time Series\n     * Returns the time series data in the specified range for a given resource in the format requested using units in the unit systems that corresponds to the Accept-Language header provided.\n     * @param {String} baseDate The range start date in  the format yyyy-MM-dd or today.\n     * @param {Date} endDate The end date of the range.\n     * @param {module:api/HeartRateTimeSeriesApi~getHeartByDateRangeCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getHeartByDateRange = function(baseDate, endDate, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'baseDate' is set\n      if (baseDate === undefined || baseDate === null) {\n        throw new Error(\"Missing the required parameter 'baseDate' when calling getHeartByDateRange\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getHeartByDateRange\");\n      }\n\n\n      var pathParams = {\n        'base-date': baseDate,\n        'end-date': endDate\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/activities/heart/date/{base-date}/{end-date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.SleepApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * Sleep service.\n   * @module api/SleepApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new SleepApi. \n   * @alias module:api/SleepApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the addSleep operation.\n     * @callback module:api/SleepApi~addSleepCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Log Sleep\n     * Creates a log entry for a sleep event and returns a response in the format requested.\n     * @param {String} startTime Start time includes hours and minutes in the format HH:mm.\n     * @param {Number} duration Duration in milliseconds.\n     * @param {Date} _date Log entry in the format yyyy-MM-dd.\n     * @param {module:api/SleepApi~addSleepCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addSleep = function(startTime, duration, _date, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'startTime' is set\n      if (startTime === undefined || startTime === null) {\n        throw new Error(\"Missing the required parameter 'startTime' when calling addSleep\");\n      }\n\n      // verify the required parameter 'duration' is set\n      if (duration === undefined || duration === null) {\n        throw new Error(\"Missing the required parameter 'duration' when calling addSleep\");\n      }\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling addSleep\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'startTime': startTime,\n        'duration': duration,\n        'date': _date,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.2/user/-/sleep.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteSleep operation.\n     * @callback module:api/SleepApi~deleteSleepCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Sleep Log\n     * Deletes a user&#39;s sleep log entry with the given ID.\n     * @param {String} logId The ID of the sleep log to be deleted.\n     * @param {module:api/SleepApi~deleteSleepCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteSleep = function(logId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'logId' is set\n      if (logId === undefined || logId === null) {\n        throw new Error(\"Missing the required parameter 'logId' when calling deleteSleep\");\n      }\n\n\n      var pathParams = {\n        'log-id': logId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.2/user/-/sleep/{log-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getSleepByDate operation.\n     * @callback module:api/SleepApi~getSleepByDateCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Sleep Log\n     * The Get Sleep Logs by Date endpoint returns a summary and list of a user&#39;s sleep log entries (including naps) as well as detailed sleep entry data for a given day.\n     * @param {Date} _date The date of records to be returned. In the format yyyy-MM-dd.\n     * @param {module:api/SleepApi~getSleepByDateCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getSleepByDate = function(_date, callback) {\n      var postBody = null;\n\n      // verify the required parameter '_date' is set\n      if (_date === undefined || _date === null) {\n        throw new Error(\"Missing the required parameter '_date' when calling getSleepByDate\");\n      }\n\n\n      var pathParams = {\n        'date': _date\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.2/user/-/sleep/date/{date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getSleepByDateRange operation.\n     * @callback module:api/SleepApi~getSleepByDateRangeCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Sleep Logs by Date Range\n     * The Get Sleep Logs by Date Range endpoint returns a list of a user&#39;s sleep log entries (including naps) as well as detailed sleep entry data for a given date range (inclusive of start and end dates).\n     * @param {Date} baseDate The date of records to be returned. In the format yyyy-MM-dd.\n     * @param {Date} endDate The date of records to be returned. In the format yyyy-MM-dd.\n     * @param {module:api/SleepApi~getSleepByDateRangeCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getSleepByDateRange = function(baseDate, endDate, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'baseDate' is set\n      if (baseDate === undefined || baseDate === null) {\n        throw new Error(\"Missing the required parameter 'baseDate' when calling getSleepByDateRange\");\n      }\n\n      // verify the required parameter 'endDate' is set\n      if (endDate === undefined || endDate === null) {\n        throw new Error(\"Missing the required parameter 'endDate' when calling getSleepByDateRange\");\n      }\n\n\n      var pathParams = {\n        'base-date': baseDate,\n        'end-date': endDate\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.2/user/-/sleep/date/{base-date}/{end-date}.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getSleepGoal operation.\n     * @callback module:api/SleepApi~getSleepGoalCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Sleep Goal\n     * Returns the user&#39;s sleep goal.\n     * @param {module:api/SleepApi~getSleepGoalCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getSleepGoal = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.2/user/-/sleep/goal.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getSleepList operation.\n     * @callback module:api/SleepApi~getSleepListCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Sleep Logs List\n     * The Get Sleep Logs List endpoint returns a list of a user&#39;s sleep logs (including naps) before or after a given day with offset, limit, and sort order.\n     * @param {String} sort The sort order of entries by date asc (ascending) or desc (descending).\n     * @param {Number} offset The offset number of entries.\n     * @param {Number} limit The maximum number of entries returned (maximum;100).\n     * @param {Object} opts Optional parameters\n     * @param {Date} opts.beforeDate The date in the format yyyy-MM-ddTHH:mm:ss. Only yyyy-MM-dd is required. Either beforeDate or afterDate should be specified.\n     * @param {Date} opts.afterDate The date in the format yyyy-MM-ddTHH:mm:ss.\n     * @param {module:api/SleepApi~getSleepListCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getSleepList = function(sort, offset, limit, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'sort' is set\n      if (sort === undefined || sort === null) {\n        throw new Error(\"Missing the required parameter 'sort' when calling getSleepList\");\n      }\n\n      // verify the required parameter 'offset' is set\n      if (offset === undefined || offset === null) {\n        throw new Error(\"Missing the required parameter 'offset' when calling getSleepList\");\n      }\n\n      // verify the required parameter 'limit' is set\n      if (limit === undefined || limit === null) {\n        throw new Error(\"Missing the required parameter 'limit' when calling getSleepList\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'beforeDate': opts['beforeDate'],\n        'afterDate': opts['afterDate'],\n        'sort': sort,\n        'offset': offset,\n        'limit': limit,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.2/user/-/sleep/list.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the updateSleepGoal operation.\n     * @callback module:api/SleepApi~updateSleepGoalCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Update Sleep Goal\n     * Create or update the user&#39;s sleep goal and get a response in the JSON format.\n     * @param {String} minDuration Duration of sleep goal.\n     * @param {module:api/SleepApi~updateSleepGoalCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.updateSleepGoal = function(minDuration, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'minDuration' is set\n      if (minDuration === undefined || minDuration === null) {\n        throw new Error(\"Missing the required parameter 'minDuration' when calling updateSleepGoal\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'minDuration': minDuration,\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1.2/user/-/sleep/goal.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.SubscriptionsApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * Subscriptions service.\n   * @module api/SubscriptionsApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new SubscriptionsApi. \n   * @alias module:api/SubscriptionsApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the addSubscriptions operation.\n     * @callback module:api/SubscriptionsApi~addSubscriptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Add a Subscription\n     * Adds a subscription in your application so that users can get notifications and return a response in the format requested. The subscription-id value provides a way to associate an update with a particular user stream in your application.\n     * @param {String} collectionPath This is the resource of the collection to receive notifications from (foods, activities, sleep, or body). If not present, subscription will be created for all collections. If you have both all and specific collection subscriptions, you will get duplicate notifications on that collections&#39; updates. Each subscriber can have only one subscription for a specific user&#39;s collection.\n     * @param {String} subscriptionId This is the unique ID of the subscription created by the API client application. Each ID must be unique across the entire set of subscribers and collections. The Fitbit servers will pass this ID back along with any notifications about the user indicated by the user parameter in the URL path.\n     * @param {module:api/SubscriptionsApi~addSubscriptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.addSubscriptions = function(collectionPath, subscriptionId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'collectionPath' is set\n      if (collectionPath === undefined || collectionPath === null) {\n        throw new Error(\"Missing the required parameter 'collectionPath' when calling addSubscriptions\");\n      }\n\n      // verify the required parameter 'subscriptionId' is set\n      if (subscriptionId === undefined || subscriptionId === null) {\n        throw new Error(\"Missing the required parameter 'subscriptionId' when calling addSubscriptions\");\n      }\n\n\n      var pathParams = {\n        'collection-path': collectionPath,\n        'subscription-id': subscriptionId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/{collection-path}/apiSubscriptions/{subscription-id}.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteSubscriptions operation.\n     * @callback module:api/SubscriptionsApi~deleteSubscriptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete a Subscription\n     * Deletes a subscription for a user..\n     * @param {String} collectionPath This is the resource of the collection to receive notifications from (foods, activities, sleep, or body). If not present, subscription will be created for all collections. If you have both all and specific collection subscriptions, you will get duplicate notifications on that collections&#39; updates. Each subscriber can have only one subscription for a specific user&#39;s collection.\n     * @param {String} subscriptionId This is the resource of the collection to receive notifications from (foods, activities, sleep, or body). If not present, subscription will be created for all collections. If you have both all and specific collection subscriptions, you will get duplicate notifications on that collections&#39; updates. Each subscriber can have only one subscription for a specific user&#39;s collection.\n     * @param {module:api/SubscriptionsApi~deleteSubscriptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteSubscriptions = function(collectionPath, subscriptionId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'collectionPath' is set\n      if (collectionPath === undefined || collectionPath === null) {\n        throw new Error(\"Missing the required parameter 'collectionPath' when calling deleteSubscriptions\");\n      }\n\n      // verify the required parameter 'subscriptionId' is set\n      if (subscriptionId === undefined || subscriptionId === null) {\n        throw new Error(\"Missing the required parameter 'subscriptionId' when calling deleteSubscriptions\");\n      }\n\n\n      var pathParams = {\n        'collection-path': collectionPath,\n        'subscription-id': subscriptionId\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/{collection-path}/apiSubscriptions/{subscription-id}.json', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getSubscriptionsList operation.\n     * @callback module:api/SubscriptionsApi~getSubscriptionsListCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get a List of Subscriptions\n     * Retreives a list of a user&#39;s subscriptions for your application in the format requested. You can either fetch subscriptions for a specific collection or the entire list of subscriptions for the user. For best practice, make sure that your application maintains this list on your side and use this endpoint only to periodically ensure data consistency.\n     * @param {String} collectionPath This is the resource of the collection to receive notifications from (foods, activities, sleep, or body). If not present, subscription will be created for all collections. If you have both all and specific collection subscriptions, you will get duplicate notifications on that collections&#39; updates. Each subscriber can have only one subscription for a specific user&#39;s collection.\n     * @param {module:api/SubscriptionsApi~getSubscriptionsListCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getSubscriptionsList = function(collectionPath, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'collectionPath' is set\n      if (collectionPath === undefined || collectionPath === null) {\n        throw new Error(\"Missing the required parameter 'collectionPath' when calling getSubscriptionsList\");\n      }\n\n\n      var pathParams = {\n        'collection-path': collectionPath\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/{collection-path}/apiSubscriptions.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.FitbitWebApi) {\n      root.FitbitWebApi = {};\n    }\n    root.FitbitWebApi.UserApi = factory(root.FitbitWebApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * User service.\n   * @module api/UserApi\n   * @version 1\n   */\n\n  /**\n   * Constructs a new UserApi. \n   * @alias module:api/UserApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getBadges operation.\n     * @callback module:api/UserApi~getBadgesCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Badges\n     * Retrieves the user&#39;s badges in the format requested. Response includes all badges for the user as seen on the Fitbit website badge locker (both activity and weight related.) The endpoint returns weight and distance badges based on the user&#39;s unit profile preference as on the website.\n     * @param {module:api/UserApi~getBadgesCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getBadges = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/badges.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getProfile operation.\n     * @callback module:api/UserApi~getProfileCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Profile\n     * Returns a user&#39;s profile. The authenticated owner receives all values. However, the authenticated user&#39;s access to other users&#39; data is subject to those users&#39; privacy settings. Numerical values are returned in the unit system specified in the Accept-Language header.\n     * @param {module:api/UserApi~getProfileCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getProfile = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/profile.json', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the updateProfile operation.\n     * @callback module:api/UserApi~updateProfileCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Update Profile\n     * Updates a user&#39;s profile using a form.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.gender The sex of the user; (MALE/FEMALE/NA).\n     * @param {Date} opts.birthday The date of birth in the format of yyyy-MM-dd.\n     * @param {String} opts.height The height in the format X.XX in the unit system that corresponds to the Accept-Language header provided.\n     * @param {String} opts.aboutMe This is a short description of user.\n     * @param {String} opts.fullname The fullname of the user.\n     * @param {String} opts.country The country of the user&#39;s residence. This is a two-character code.\n     * @param {String} opts.state The US state of the user&#39;s residence. This is a two-character code if the country was or is set to US.\n     * @param {String} opts.city The US city of the user&#39;s residence.\n     * @param {String} opts.strideLengthWalking Walking stride length in the format X.XX, where it is in the unit system that corresponds to the Accept-Language header provided.\n     * @param {String} opts.strideLengthRunning Running stride length in the format X.XX, where it is in the unit system that corresponds to the Accept-Language header provided.\n     * @param {String} opts.weightUnit Default weight unit on website (which doesn&#39;t affect API); one of (en_US, en_GB, &#39;any&#39; for METRIC).\n     * @param {String} opts.heightUnit Default height/distance unit on website (which doesn&#39;t affect API); one of (en_US, en_GB, &#39;any&#39; for METRIC).\n     * @param {String} opts.waterUnit Default water unit on website (which doesn&#39;t affect API); one of (en_US, en_GB, &#39;any&#39; for METRIC).\n     * @param {String} opts.glucoseUnit Default glucose unit on website (which doesn&#39;t affect API); one of (en_US, en_GB, &#39;any&#39; for METRIC).\n     * @param {String} opts.timezone The timezone in the format &#39;America/Los_Angeles&#39;.\n     * @param {String} opts.foodsLocale The food database locale in the format of xx.XX.\n     * @param {String} opts.locale The locale of the website (country/language); one of the locales, currently – (en_US, fr_FR, de_DE, es_ES, en_GB, en_AU, en_NZ, ja_JP).\n     * @param {String} opts.localeLang The Language in the format &#39;xx&#39;. You should specify either locale or both - localeLang and localeCountry (locale is higher priority).\n     * @param {String} opts.localeCountry The Country in the format &#39;xx&#39;. You should specify either locale or both - localeLang and localeCountry (locale is higher priority).\n     * @param {String} opts.startDayOfWeek The Start day of the week, meaning what day the week should start on. Either Sunday or Monday.\n     * @param {module:api/UserApi~updateProfileCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.updateProfile = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n        'gender': opts['gender'],\n        'birthday': opts['birthday'],\n        'height': opts['height'],\n        'aboutMe': opts['aboutMe'],\n        'fullname': opts['fullname'],\n        'country': opts['country'],\n        'state': opts['state'],\n        'city': opts['city'],\n        'strideLengthWalking': opts['strideLengthWalking'],\n        'strideLengthRunning': opts['strideLengthRunning'],\n        'weightUnit': opts['weightUnit'],\n        'heightUnit': opts['heightUnit'],\n        'waterUnit': opts['waterUnit'],\n        'glucoseUnit': opts['glucoseUnit'],\n        'timezone': opts['timezone'],\n        'foodsLocale': opts['foodsLocale'],\n        'locale': opts['locale'],\n        'localeLang': opts['localeLang'],\n        'localeCountry': opts['localeCountry'],\n        'startDayOfWeek': opts['startDayOfWeek']\n      };\n\n      var authNames = ['oauth2'];\n      var contentTypes = ['multipart/form-data'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/1/user/-/profile.json', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n", "/**\n * Fitbit Web API\n * Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/oauth2/#obtaining-consent.\n *\n * OpenAPI spec version: 1\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.4.7\n *\n * Do not edit the class manually.\n *\n */\n\n(function(factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'api/ActivityApi', 'api/ActivityIntradayTimeSeriesApi', 'api/ActivityTimeSeriesApi', 'api/AuthApi', 'api/BodyAndWeightApi', 'api/BodyAndWeightTimeSeriesApi', 'api/DevicesApi', 'api/FoodAndWaterApi', 'api/FoodAndWaterTimeSeriesApi', 'api/FriendsApi', 'api/HeartRateIntradayTimeSeriesApi', 'api/HeartRateTimeSeriesApi', 'api/SleepApi', 'api/SubscriptionsApi', 'api/UserApi'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('./ApiClient'), require('./api/ActivityApi'), require('./api/ActivityIntradayTimeSeriesApi'), require('./api/ActivityTimeSeriesApi'), require('./api/AuthApi'), require('./api/BodyAndWeightApi'), require('./api/BodyAndWeightTimeSeriesApi'), require('./api/DevicesApi'), require('./api/FoodAndWaterApi'), require('./api/FoodAndWaterTimeSeriesApi'), require('./api/FriendsApi'), require('./api/HeartRateIntradayTimeSeriesApi'), require('./api/HeartRateTimeSeriesApi'), require('./api/SleepApi'), require('./api/SubscriptionsApi'), require('./api/UserApi'));\n  }\n}(function(ApiClient, ActivityApi, ActivityIntradayTimeSeriesApi, ActivityTimeSeriesApi, AuthApi, BodyAndWeightApi, BodyAndWeightTimeSeriesApi, DevicesApi, FoodAndWaterApi, FoodAndWaterTimeSeriesApi, FriendsApi, HeartRateIntradayTimeSeriesApi, HeartRateTimeSeriesApi, SleepApi, SubscriptionsApi, UserApi) {\n  'use strict';\n\n  /**\n   * Fitbit_provides_a_Web_API_for_accessing_data_from_Fitbit_activity_trackers_Aria_scale_and_manually_entered_logs__Anyone_can_develop_an_application_to_access_and_modify_a_Fitbit_users_data_on_their_behalf_so_long_as_it_complies_with_Fitbit_Platform_Terms_of_Service__These_Swagger_UI_docs_do_not_currently_support_making_Fitbit_API_requests_directly__In_order_to_make_a_request_construct_a_request_for_the_appropriate_endpoint_using_this_documentation_and_then_add_an_Authorization_header_to_each_request_with_an_access_token_obtained_using_the_steps_outlined_here_httpsdev_fitbit_combuildreferenceweb_apioauth2obtaining_consent_.<br>\n   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.\n   * <p>\n   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:\n   * <pre>\n   * var FitbitWebApi = require('index'); // See note below*.\n   * var xxxSvc = new FitbitWebApi.XxxApi(); // Allocate the API class we're going to use.\n   * var yyyModel = new FitbitWebApi.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})\n   * and put the application logic within the callback function.</em>\n   * </p>\n   * <p>\n   * A non-AMD browser application (discouraged) might do something like this:\n   * <pre>\n   * var xxxSvc = new FitbitWebApi.XxxApi(); // Allocate the API class we're going to use.\n   * var yyy = new FitbitWebApi.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * </p>\n   * @module index\n   * @version 1\n   */\n  var exports = {\n    /**\n     * The ApiClient constructor.\n     * @property {module:ApiClient}\n     */\n    ApiClient: ApiClient,\n    /**\n     * The ActivityApi service constructor.\n     * @property {module:api/ActivityApi}\n     */\n    ActivityApi: ActivityApi,\n    /**\n     * The ActivityIntradayTimeSeriesApi service constructor.\n     * @property {module:api/ActivityIntradayTimeSeriesApi}\n     */\n    ActivityIntradayTimeSeriesApi: ActivityIntradayTimeSeriesApi,\n    /**\n     * The ActivityTimeSeriesApi service constructor.\n     * @property {module:api/ActivityTimeSeriesApi}\n     */\n    ActivityTimeSeriesApi: ActivityTimeSeriesApi,\n    /**\n     * The AuthApi service constructor.\n     * @property {module:api/AuthApi}\n     */\n    AuthApi: AuthApi,\n    /**\n     * The BodyAndWeightApi service constructor.\n     * @property {module:api/BodyAndWeightApi}\n     */\n    BodyAndWeightApi: BodyAndWeightApi,\n    /**\n     * The BodyAndWeightTimeSeriesApi service constructor.\n     * @property {module:api/BodyAndWeightTimeSeriesApi}\n     */\n    BodyAndWeightTimeSeriesApi: BodyAndWeightTimeSeriesApi,\n    /**\n     * The DevicesApi service constructor.\n     * @property {module:api/DevicesApi}\n     */\n    DevicesApi: DevicesApi,\n    /**\n     * The FoodAndWaterApi service constructor.\n     * @property {module:api/FoodAndWaterApi}\n     */\n    FoodAndWaterApi: FoodAndWaterApi,\n    /**\n     * The FoodAndWaterTimeSeriesApi service constructor.\n     * @property {module:api/FoodAndWaterTimeSeriesApi}\n     */\n    FoodAndWaterTimeSeriesApi: FoodAndWaterTimeSeriesApi,\n    /**\n     * The FriendsApi service constructor.\n     * @property {module:api/FriendsApi}\n     */\n    FriendsApi: FriendsApi,\n    /**\n     * The HeartRateIntradayTimeSeriesApi service constructor.\n     * @property {module:api/HeartRateIntradayTimeSeriesApi}\n     */\n    HeartRateIntradayTimeSeriesApi: HeartRateIntradayTimeSeriesApi,\n    /**\n     * The HeartRateTimeSeriesApi service constructor.\n     * @property {module:api/HeartRateTimeSeriesApi}\n     */\n    HeartRateTimeSeriesApi: HeartRateTimeSeriesApi,\n    /**\n     * The SleepApi service constructor.\n     * @property {module:api/SleepApi}\n     */\n    SleepApi: SleepApi,\n    /**\n     * The SubscriptionsApi service constructor.\n     * @property {module:api/SubscriptionsApi}\n     */\n    SubscriptionsApi: SubscriptionsApi,\n    /**\n     * The UserApi service constructor.\n     * @property {module:api/UserApi}\n     */\n    UserApi: UserApi\n  };\n\n  return exports;\n}));\n"],
  "mappings": "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",
  "names": ["self", "str", "self", "serialize", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports"]
}
